{"ast":null,"code":"/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\nimport agent from 'superagent';\nimport Auth from '../state/Auth';\nexport var post = function post(uri, payload) {\n  return new Promise(function (resolve, reject) {\n    agent.post(uri).send(payload).set('Accept', 'application/json').set('Authorization', \"bearer \".concat(Auth.getToken())).end(withPromiseCallback(resolve, reject));\n  });\n};\nexport var get = function get(uri) {\n  return new Promise(function (resolve, reject) {\n    agent.get(uri).set('Accept', 'application/json').set('Authorization', \"bearer \".concat(Auth.getToken())).set('Cache-Control', 'no-cache').end(withPromiseCallback(resolve, reject));\n  });\n};\nexport var put = function put(uri, payload) {\n  return new Promise(function (resolve, reject) {\n    agent.put(uri).send(payload).set('Accept', 'application/json').set('Authorization', \"bearer \".concat(Auth.getToken())).end(withPromiseCallback(resolve, reject));\n  });\n};\nexport var deleteRequest = function deleteRequest(uri, payload) {\n  return new Promise(function (resolve, reject) {\n    agent.delete(uri).send(payload).set('Accept', 'application/json').set('Authorization', \"bearer \".concat(Auth.getToken())).end(withPromiseCallback(resolve, reject));\n  });\n};\nexport var withPromiseCallback = function withPromiseCallback(resolve, reject) {\n  return function (error, response) {\n    if (error) {\n      console.error(error);\n\n      if (response && response.status === 401) {\n        Auth.deauthenticateUser();\n      }\n\n      reject({\n        error: error\n      });\n    } else {\n      resolve(response.body);\n    }\n  };\n};","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/services/request.js"],"names":["agent","Auth","post","uri","payload","Promise","resolve","reject","send","set","getToken","end","withPromiseCallback","get","put","deleteRequest","delete","error","response","console","status","deauthenticateUser","body"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAMC,OAAN;AAAA,SACnB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChCP,IAAAA,KAAK,CACHE,IADF,CACOC,GADP,EAEEK,IAFF,CAEOJ,OAFP,EAGEK,GAHF,CAGM,QAHN,EAGgB,kBAHhB,EAIEA,GAJF,CAIM,eAJN,mBAIiCR,IAAI,CAACS,QAAL,EAJjC,GAKEC,GALF,CAKMC,mBAAmB,CAACN,OAAD,EAAUC,MAAV,CALzB;AAMA,GAPD,CADmB;AAAA,CAAb;AASP,OAAO,IAAMM,GAAG,GAAG,SAANA,GAAM,CAAAV,GAAG;AAAA,SACrB,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChCP,IAAAA,KAAK,CACHa,GADF,CACMV,GADN,EAEEM,GAFF,CAEM,QAFN,EAEgB,kBAFhB,EAGEA,GAHF,CAGM,eAHN,mBAGiCR,IAAI,CAACS,QAAL,EAHjC,GAIED,GAJF,CAIM,eAJN,EAIuB,UAJvB,EAKEE,GALF,CAKMC,mBAAmB,CAACN,OAAD,EAAUC,MAAV,CALzB;AAMA,GAPD,CADqB;AAAA,CAAf;AASP,OAAO,IAAMO,GAAG,GAAG,SAANA,GAAM,CAACX,GAAD,EAAMC,OAAN;AAAA,SAClB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChCP,IAAAA,KAAK,CACHc,GADF,CACMX,GADN,EAEEK,IAFF,CAEOJ,OAFP,EAGEK,GAHF,CAGM,QAHN,EAGgB,kBAHhB,EAIEA,GAJF,CAIM,eAJN,mBAIiCR,IAAI,CAACS,QAAL,EAJjC,GAKEC,GALF,CAKMC,mBAAmB,CAACN,OAAD,EAAUC,MAAV,CALzB;AAMA,GAPD,CADkB;AAAA,CAAZ;AASP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACZ,GAAD,EAAMC,OAAN;AAAA,SAC5B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChCP,IAAAA,KAAK,CACHgB,MADF,CACSb,GADT,EAEEK,IAFF,CAEOJ,OAFP,EAGEK,GAHF,CAGM,QAHN,EAGgB,kBAHhB,EAIEA,GAJF,CAIM,eAJN,mBAIiCR,IAAI,CAACS,QAAL,EAJjC,GAKEC,GALF,CAKMC,mBAAmB,CAACN,OAAD,EAAUC,MAAV,CALzB;AAMA,GAPD,CAD4B;AAAA,CAAtB;AASP,OAAO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACN,OAAD,EAAUC,MAAV;AAAA,SAAqB,UAACU,KAAD,EAAQC,QAAR,EAAqB;AAC5E,QAAID,KAAJ,EAAW;AACVE,MAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;;AACA,UAAIC,QAAQ,IAAIA,QAAQ,CAACE,MAAT,KAAoB,GAApC,EAAyC;AACxCnB,QAAAA,IAAI,CAACoB,kBAAL;AACA;;AACDd,MAAAA,MAAM,CAAC;AAAEU,QAAAA,KAAK,EAALA;AAAF,OAAD,CAAN;AACA,KAND,MAMO;AACNX,MAAAA,OAAO,CAACY,QAAQ,CAACI,IAAV,CAAP;AACA;AACD,GAVkC;AAAA,CAA5B","sourcesContent":["/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport agent from 'superagent';\r\n\r\nimport Auth from '../state/Auth';\r\n\r\nexport const post = (uri, payload) =>\r\n\tnew Promise((resolve, reject) => {\r\n\t\tagent\r\n\t\t\t.post(uri)\r\n\t\t\t.send(payload)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.set('Authorization', `bearer ${Auth.getToken()}`)\r\n\t\t\t.end(withPromiseCallback(resolve, reject));\r\n\t});\r\nexport const get = uri =>\r\n\tnew Promise((resolve, reject) => {\r\n\t\tagent\r\n\t\t\t.get(uri)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.set('Authorization', `bearer ${Auth.getToken()}`)\r\n\t\t\t.set('Cache-Control', 'no-cache')\r\n\t\t\t.end(withPromiseCallback(resolve, reject));\r\n\t});\r\nexport const put = (uri, payload) =>\r\n\tnew Promise((resolve, reject) => {\r\n\t\tagent\r\n\t\t\t.put(uri)\r\n\t\t\t.send(payload)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.set('Authorization', `bearer ${Auth.getToken()}`)\r\n\t\t\t.end(withPromiseCallback(resolve, reject));\r\n\t});\r\nexport const deleteRequest = (uri, payload) =>\r\n\tnew Promise((resolve, reject) => {\r\n\t\tagent\r\n\t\t\t.delete(uri)\r\n\t\t\t.send(payload)\r\n\t\t\t.set('Accept', 'application/json')\r\n\t\t\t.set('Authorization', `bearer ${Auth.getToken()}`)\r\n\t\t\t.end(withPromiseCallback(resolve, reject));\r\n\t});\r\nexport const withPromiseCallback = (resolve, reject) => (error, response) => {\r\n\tif (error) {\r\n\t\tconsole.error(error);\r\n\t\tif (response && response.status === 401) {\r\n\t\t\tAuth.deauthenticateUser();\r\n\t\t}\r\n\t\treject({ error });\r\n\t} else {\r\n\t\tresolve(response.body);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}