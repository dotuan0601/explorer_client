{"ast":null,"code":"import _classCallCheck from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/teko/work/new_explorer/client/src/components/Panels/NotificationsPanel.js\";\n\n/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport FontAwesome from 'react-fontawesome';\nimport { Badge } from 'reactstrap';\nimport Timeago from 'react-timeago';\n/* istanbul ignore next */\n\nvar styles = function styles(theme) {\n  var type = theme.palette.type;\n  var dark = type === 'dark';\n  return {\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    avatarBlue: {\n      backgroundColor: '#1C3860'\n    },\n    panel: {\n      color: dark ? '#ffffff' : undefined,\n      backgroundColor: dark ? '#5e558e' : undefined\n    },\n    badge: {\n      marginLeft: '60% !important',\n      color: dark ? '#ffffff' : undefined,\n      backgroundColor: dark ? '#242036' : undefined\n    },\n    time: {\n      color: dark ? '#ffffff' : undefined,\n      backgroundColor: dark ? '#242036' : undefined\n    }\n  };\n};\n\nexport var NotificationsPanel = /*#__PURE__*/function (_Component) {\n  _inherits(NotificationsPanel, _Component);\n\n  var _super = _createSuper(NotificationsPanel);\n\n  function NotificationsPanel() {\n    var _this;\n\n    _classCallCheck(this, NotificationsPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.avatarIcon = function (type, classes) {\n      if (type === 'block') {\n        return /*#__PURE__*/React.createElement(Avatar, {\n          className: classes.avatarBlue,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesome, {\n          name: \"cube\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 6\n          }\n        }), ' ');\n      } else {\n        return /*#__PURE__*/React.createElement(Avatar, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(FontAwesome, {\n          name: \"exclamation\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 6\n          }\n        }), ' ');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(NotificationsPanel, [{\n    key: \"render\",\n    value:\n    /* istanbul ignore next */\n    function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          notifications = _this$props.notifications;\n\n      if (notifications.length === 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.panel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.root,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(List, {\n          component: \"nav\",\n          className: classes.panel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(ListItem, {\n          button: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          variant: \"title\",\n          className: classes.panel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }\n        }, \"NO NOTIFICATIONS\")))));\n      }\n      /* istanbul ignore next */\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.panel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(List, {\n        component: \"nav\",\n        className: classes.panel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }\n      }, notifications.map(function (notify, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(ListItem, {\n          key: index,\n          button: true,\n          className: classes.panel,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }\n        }, _this2.avatarIcon(notify.type, classes), /*#__PURE__*/React.createElement(ListItemText, {\n          className: classes.panel,\n          primary: notify.title,\n          secondary: notify.message,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 10\n          }\n        })), /*#__PURE__*/React.createElement(Badge, {\n          className: classes.badge,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Timeago, {\n          className: classes.time,\n          date: notify.time,\n          live: false,\n          minPeriod: 60,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 10\n          }\n        })));\n      }))));\n    }\n  }]);\n\n  return NotificationsPanel;\n}(Component);\nexport default withStyles(styles)(NotificationsPanel);","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/components/Panels/NotificationsPanel.js"],"names":["React","Component","withStyles","List","ListItem","ListItemText","Typography","Avatar","FontAwesome","Badge","Timeago","styles","theme","type","palette","dark","root","width","maxWidth","backgroundColor","background","paper","avatarBlue","panel","color","undefined","badge","marginLeft","time","NotificationsPanel","avatarIcon","classes","props","notifications","length","map","notify","index","title","message"],"mappings":"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","sourcesContent":["/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\r\n/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { Badge } from 'reactstrap';\r\nimport Timeago from 'react-timeago';\r\n\r\n/* istanbul ignore next */\r\nconst styles = theme => {\r\n\tconst { type } = theme.palette;\r\n\tconst dark = type === 'dark';\r\n\treturn {\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t\tmaxWidth: 360,\r\n\t\t\tbackgroundColor: theme.palette.background.paper\r\n\t\t},\r\n\t\tavatarBlue: {\r\n\t\t\tbackgroundColor: '#1C3860'\r\n\t\t},\r\n\t\tpanel: {\r\n\t\t\tcolor: dark ? '#ffffff' : undefined,\r\n\t\t\tbackgroundColor: dark ? '#5e558e' : undefined\r\n\t\t},\r\n\t\tbadge: {\r\n\t\t\tmarginLeft: '60% !important',\r\n\t\t\tcolor: dark ? '#ffffff' : undefined,\r\n\t\t\tbackgroundColor: dark ? '#242036' : undefined\r\n\t\t},\r\n\t\ttime: {\r\n\t\t\tcolor: dark ? '#ffffff' : undefined,\r\n\t\t\tbackgroundColor: dark ? '#242036' : undefined\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport class NotificationsPanel extends Component {\r\n\t/* istanbul ignore next */\r\n\tavatarIcon = (type, classes) => {\r\n\t\tif (type === 'block') {\r\n\t\t\treturn (\r\n\t\t\t\t<Avatar className={classes.avatarBlue}>\r\n\t\t\t\t\t<FontAwesome name=\"cube\" />{' '}\r\n\t\t\t\t</Avatar>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Avatar>\r\n\t\t\t\t\t<FontAwesome name=\"exclamation\" />{' '}\r\n\t\t\t\t</Avatar>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\t/* istanbul ignore next */\r\n\trender() {\r\n\t\tconst { classes, notifications } = this.props;\r\n\t\tif (notifications.length === 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={classes.panel}>\r\n\t\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t\t<List component=\"nav\" className={classes.panel}>\r\n\t\t\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"title\" className={classes.panel}>\r\n\t\t\t\t\t\t\t\t\tNO NOTIFICATIONS\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t/* istanbul ignore next */\r\n\t\treturn (\r\n\t\t\t<div className={classes.panel}>\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t<List component=\"nav\" className={classes.panel}>\r\n\t\t\t\t\t\t{notifications.map((notify, index) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<ListItem key={index} button className={classes.panel}>\r\n\t\t\t\t\t\t\t\t\t{this.avatarIcon(notify.type, classes)}\r\n\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.panel}\r\n\t\t\t\t\t\t\t\t\t\tprimary={notify.title}\r\n\t\t\t\t\t\t\t\t\t\tsecondary={notify.message}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<Badge className={classes.badge}>\r\n\t\t\t\t\t\t\t\t\t<Timeago\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.time}\r\n\t\t\t\t\t\t\t\t\t\tdate={notify.time}\r\n\t\t\t\t\t\t\t\t\t\tlive={false}\r\n\t\t\t\t\t\t\t\t\t\tminPeriod={60}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withStyles(styles)(NotificationsPanel);\r\n"]},"metadata":{},"sourceType":"module"}