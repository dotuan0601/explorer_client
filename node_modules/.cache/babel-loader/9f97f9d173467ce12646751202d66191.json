{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/teko/work/new_explorer/client/src/components/Lists/Peers.js\";\n\n/**\n *    SPDX-License-Identifier: Apache-2.0\n */\nimport React from 'react';\nimport matchSorter from 'match-sorter';\nimport ReactTable from '../Styled/Table';\nimport { peerListType } from '../../consts/types';\n/* istanbul ignore next */\n\nvar Peers = function Peers(_ref) {\n  var peerList = _ref.peerList;\n  var columnHeaders = [{\n    Header: 'Peer Name',\n    accessor: 'server_hostname',\n    filterMethod: function filterMethod(filter, rows) {\n      return matchSorter(rows, filter.value, {\n        keys: ['server_hostname']\n      }, {\n        threshold: matchSorter.rankings.SIMPLEMATCH\n      });\n    },\n    filterAll: true\n  }, {\n    Header: 'Request Url',\n    accessor: 'requests',\n    filterMethod: function filterMethod(filter, rows) {\n      return matchSorter(rows, filter.value, {\n        keys: ['requests']\n      }, {\n        threshold: matchSorter.rankings.SIMPLEMATCH\n      });\n    },\n    filterAll: true\n  }, {\n    Header: 'Peer Type',\n    accessor: 'peer_type',\n    filterMethod: function filterMethod(filter, rows) {\n      return matchSorter(rows, filter.value, {\n        keys: ['peer_type']\n      }, {\n        threshold: matchSorter.rankings.SIMPLEMATCH\n      });\n    },\n    filterAll: true\n  }, {\n    Header: 'MSPID',\n    accessor: 'mspid',\n    filterMethod: function filterMethod(filter, rows) {\n      return matchSorter(rows, filter.value, {\n        keys: ['mspid']\n      }, {\n        threshold: matchSorter.rankings.SIMPLEMATCH\n      });\n    },\n    filterAll: true\n  }, {\n    Header: 'Ledger Height',\n    columns: [{\n      Header: 'High',\n      accessor: 'ledger_height_high',\n      filterMethod: function filterMethod(filter, rows) {\n        return matchSorter(rows, filter.value, {\n          keys: ['ledger_height_high']\n        }, {\n          threshold: matchSorter.rankings.SIMPLEMATCH\n        });\n      },\n      filterAll: true\n    }, {\n      Header: 'Low',\n      accessor: 'ledger_height_low',\n      filterMethod: function filterMethod(filter, rows) {\n        return matchSorter(rows, filter.value, {\n          keys: ['ledger_height_low']\n        }, {\n          threshold: matchSorter.rankings.SIMPLEMATCH\n        });\n      },\n      filterAll: true\n    }, {\n      Header: 'Unsigned',\n      id: 'ledger_height_unsigned',\n      accessor: function accessor(d) {\n        return d.ledger_height_unsigned ? d.ledger_height_unsigned.toString() : '';\n      },\n      filterMethod: function filterMethod(filter, rows) {\n        return matchSorter(rows, filter.value, {\n          keys: ['ledger_height_unsigned']\n        }, {\n          threshold: matchSorter.rankings.SIMPLEMATCH\n        });\n      },\n      filterAll: true\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ReactTable, {\n    data: peerList,\n    columns: columnHeaders,\n    defaultPageSize: 5,\n    filterable: true,\n    minRows: 0,\n    showPagination: peerList.length >= 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }));\n};\n\nPeers.propTypes = {\n  peerList: peerListType.isRequired\n};\nexport default Peers;","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/components/Lists/Peers.js"],"names":["React","matchSorter","ReactTable","peerListType","Peers","peerList","columnHeaders","Header","accessor","filterMethod","filter","rows","value","keys","threshold","rankings","SIMPLEMATCH","filterAll","columns","id","d","ledger_height_unsigned","toString","length","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport matchSorter from 'match-sorter';\nimport ReactTable from '../Styled/Table';\nimport { peerListType } from '../../consts/types';\n\n/* istanbul ignore next */\nconst Peers = ({ peerList }) => {\n\tconst columnHeaders = [\n\t\t{\n\t\t\tHeader: 'Peer Name',\n\t\t\taccessor: 'server_hostname',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['server_hostname'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Request Url',\n\t\t\taccessor: 'requests',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['requests'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Peer Type',\n\t\t\taccessor: 'peer_type',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['peer_type'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'MSPID',\n\t\t\taccessor: 'mspid',\n\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\tmatchSorter(\n\t\t\t\t\trows,\n\t\t\t\t\tfilter.value,\n\t\t\t\t\t{ keys: ['mspid'] },\n\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t),\n\t\t\tfilterAll: true\n\t\t},\n\t\t{\n\t\t\tHeader: 'Ledger Height',\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\tHeader: 'High',\n\t\t\t\t\taccessor: 'ledger_height_high',\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_high'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Low',\n\t\t\t\t\taccessor: 'ledger_height_low',\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_low'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tHeader: 'Unsigned',\n\t\t\t\t\tid: 'ledger_height_unsigned',\n\t\t\t\t\taccessor: d =>\n\t\t\t\t\t\td.ledger_height_unsigned ? d.ledger_height_unsigned.toString() : '',\n\t\t\t\t\tfilterMethod: (filter, rows) =>\n\t\t\t\t\t\tmatchSorter(\n\t\t\t\t\t\t\trows,\n\t\t\t\t\t\t\tfilter.value,\n\t\t\t\t\t\t\t{ keys: ['ledger_height_unsigned'] },\n\t\t\t\t\t\t\t{ threshold: matchSorter.rankings.SIMPLEMATCH }\n\t\t\t\t\t\t),\n\t\t\t\t\tfilterAll: true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<ReactTable\n\t\t\t\tdata={peerList}\n\t\t\t\tcolumns={columnHeaders}\n\t\t\t\tdefaultPageSize={5}\n\t\t\t\tfilterable\n\t\t\t\tminRows={0}\n\t\t\t\tshowPagination={peerList.length >= 5}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nPeers.propTypes = {\n\tpeerList: peerListType.isRequired\n};\n\nexport default Peers;\n"]},"metadata":{},"sourceType":"module"}