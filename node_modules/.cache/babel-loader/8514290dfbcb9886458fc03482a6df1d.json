{"ast":null,"code":"import _classCallCheck from\"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";// SPDX-License-Identifier: Apache-2.0\nvar Auth=/*#__PURE__*/function(){function Auth(){_classCallCheck(this,Auth);}_createClass(Auth,null,[{key:\"authenticateUser\",value:/**\r\n\t * Authenticate a user. Save a token string in Local Storage\r\n\t *\r\n\t * @param {string} token\r\n\t */function authenticateUser(token){localStorage.setItem('token',token);}/**\r\n\t * Check if a user is authenticated - check if a token is saved in Local Storage\r\n\t *\r\n\t * @returns {boolean}\r\n\t */},{key:\"isUserAuthenticated\",value:function isUserAuthenticated(){return localStorage.getItem('token')!==null;}/**\r\n\t * Deauthenticate a user. Remove a token from Local Storage.\r\n\t *\r\n\t */},{key:\"deauthenticateUser\",value:function deauthenticateUser(){localStorage.removeItem('token');}/**\r\n\t * Get a token value.\r\n\t *\r\n\t * @returns {string}\r\n\t */},{key:\"getToken\",value:function getToken(){return localStorage.getItem('token');}}]);return Auth;}();export{Auth as default};","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/state/Auth.js"],"names":["Auth","token","localStorage","setItem","getItem","removeItem"],"mappings":"kTAAA;GACqBA,CAAAA,I,2HACpB;AACD;AACA;AACA;AACA,IACC,0BAAwBC,KAAxB,CAA+B,CAC9BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BF,KAA9B,EACA,CAED;AACD;AACA;AACA;AACA,I,mCACC,8BAA6B,CAC5B,MAAOC,CAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,IAAkC,IAAzC,CACA,CAED;AACD;AACA;AACA,I,kCACC,6BAA4B,CAC3BF,YAAY,CAACG,UAAb,CAAwB,OAAxB,EACA,CAED;AACD;AACA;AACA;AACA,I,wBAEC,mBAAkB,CACjB,MAAOH,CAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,CAAP,CACA,C,2BAnCmBJ,I","sourcesContent":["// SPDX-License-Identifier: Apache-2.0\r\nexport default class Auth {\r\n\t/**\r\n\t * Authenticate a user. Save a token string in Local Storage\r\n\t *\r\n\t * @param {string} token\r\n\t */\r\n\tstatic authenticateUser(token) {\r\n\t\tlocalStorage.setItem('token', token);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if a user is authenticated - check if a token is saved in Local Storage\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isUserAuthenticated() {\r\n\t\treturn localStorage.getItem('token') !== null;\r\n\t}\r\n\r\n\t/**\r\n\t * Deauthenticate a user. Remove a token from Local Storage.\r\n\t *\r\n\t */\r\n\tstatic deauthenticateUser() {\r\n\t\tlocalStorage.removeItem('token');\r\n\t}\r\n\r\n\t/**\r\n\t * Get a token value.\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\r\n\tstatic getToken() {\r\n\t\treturn localStorage.getItem('token');\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}