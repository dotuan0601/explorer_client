{"ast":null,"code":"import _objectSpread from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n/**\n *    SPDX-License-Identifier: Apache-2.0\n */\nimport types from '../../../consts/auth';\nvar initialState = {\n  user: '',\n  token: null,\n  error: '',\n  networks: [],\n  registered: '',\n  userlists: []\n};\n/* Reducers for Dashboard Charts */\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LOGIN:\n    case types.ERROR:\n    case types.NETWORK:\n    case types.REGISTER:\n      {\n        return _objectSpread(_objectSpread({}, state), action.payload);\n      }\n\n    case types.USERLIST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userlists: action.payload.users\n        });\n      }\n\n    case types.UNREGISTER:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          unregistered: action.payload.users\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/state/redux/auth/reducers.js"],"names":["types","initialState","user","token","error","networks","registered","userlists","authReducer","state","action","type","LOGIN","ERROR","NETWORK","REGISTER","payload","USERLIST","users","UNREGISTER","unregistered"],"mappings":";;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,sBAAlB;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE,IAFa;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,QAAQ,EAAE,EAJU;AAKpBC,EAAAA,UAAU,EAAE,EALQ;AAMpBC,EAAAA,SAAS,EAAE;AANS,CAArB;AASA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,KAAK,CAACY,KAAX;AACA,SAAKZ,KAAK,CAACa,KAAX;AACA,SAAKb,KAAK,CAACc,OAAX;AACA,SAAKd,KAAK,CAACe,QAAX;AAAqB;AACpB,+CACIN,KADJ,GAEIC,MAAM,CAACM,OAFX;AAIA;;AACD,SAAKhB,KAAK,CAACiB,QAAX;AAAqB;AACpB,+CACIR,KADJ;AAECF,UAAAA,SAAS,EAAEG,MAAM,CAACM,OAAP,CAAeE;AAF3B;AAIA;;AACD,SAAKlB,KAAK,CAACmB,UAAX;AAAuB;AACtB,+CACIV,KADJ;AAECW,UAAAA,YAAY,EAAEV,MAAM,CAACM,OAAP,CAAeE;AAF9B;AAIA;;AACD;AAAS;AACR,eAAOT,KAAP;AACA;AAxBF;AA0BA,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport types from '../../../consts/auth';\n\nconst initialState = {\n\tuser: '',\n\ttoken: null,\n\terror: '',\n\tnetworks: [],\n\tregistered: '',\n\tuserlists: []\n};\n\n/* Reducers for Dashboard Charts */\nconst authReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase types.LOGIN:\n\t\tcase types.ERROR:\n\t\tcase types.NETWORK:\n\t\tcase types.REGISTER: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload\n\t\t\t};\n\t\t}\n\t\tcase types.USERLIST: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserlists: action.payload.users\n\t\t\t};\n\t\t}\n\t\tcase types.UNREGISTER: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tunregistered: action.payload.users\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}