{"ast":null,"code":"import _regeneratorRuntime from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/teko/work/new_explorer/client/src/components/View/LandingPage.js\";\n\n/**\n *    SPDX-License-Identifier: Apache-2.0\n */\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Logo from '../../static/images/Logo-VNPAYQR.png';\nimport { chartOperations, chartSelectors } from '../../state/redux/charts';\nimport { tableOperations } from '../../state/redux/tables';\nimport { authOperations } from '../../state/redux/auth';\nimport { currentChannelType, getBlockListType, getBlocksPerHourType, getBlocksPerMinType, getChaincodeListType, getChannelListType, getChannelType, getChannelsType, getDashStatsType, getPeerListType, getPeerStatusType, getTransactionByOrgType, getTransactionListType, getTransactionPerHourType, getTransactionPerMinType, getUserListType } from '../../consts/types';\nvar blockPerHour = chartOperations.blockPerHour,\n    blockPerMin = chartOperations.blockPerMin,\n    blockActivity = chartOperations.blockActivity,\n    channel = chartOperations.channel,\n    channelList = chartOperations.channelList,\n    dashStats = chartOperations.dashStats,\n    peerStatus = chartOperations.peerStatus,\n    transactionByOrg = chartOperations.transactionByOrg,\n    transactionPerHour = chartOperations.transactionPerHour,\n    transactionPerMin = chartOperations.transactionPerMin;\nvar blockList = tableOperations.blockList,\n    chaincodeList = tableOperations.chaincodeList,\n    channels = tableOperations.channels,\n    peerList = tableOperations.peerList,\n    transactionList = tableOperations.transactionList;\nvar userlist = authOperations.userlist;\nvar currentChannelSelector = chartSelectors.currentChannelSelector;\n\nvar styles = function styles(theme) {\n  var type = theme.palette.type;\n  var dark = type === 'dark';\n  /* eslint-disable */\n\n  dark ? document.body.style.backgroundColor = '#242036' : document.body.style.backgroundColor = '#f0f5f9';\n  return {\n    background: {\n      backgroundColor: '#f0f5f9'\n    },\n    content: {\n      marginTop: 450,\n      marginLeft: 550,\n      '& > h1': {\n        fontSize: '40pt'\n      },\n      '& > div': {\n        marginLeft: 150\n      }\n    }\n  };\n  /* eslint-enable */\n};\n\nexport var LandingPage = /*#__PURE__*/function (_Component) {\n  _inherits(LandingPage, _Component);\n\n  var _super = _createSuper(LandingPage);\n\n  function LandingPage(props) {\n    var _this;\n\n    _classCallCheck(this, LandingPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      settings: {\n        dots: false,\n        infinite: true,\n        autoplay: true,\n        autoplaySpeed: 2000,\n        pauseOnHover: false,\n        accessibility: false,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n      },\n      logoStyle: {\n        width: '520px',\n        height: '100px'\n      },\n      hasDbError: false\n    };\n    return _this;\n  }\n\n  _createClass(LandingPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _this$props, getBlockList, getBlocksPerHour, getBlocksPerMin, getChaincodeList, getChannel, getChannelList, getChannels, getDashStats, getPeerList, getPeerStatus, getBlockActivity, getTransactionByOrg, getTransactionList, getTransactionPerHour, getTransactionPerMin, updateLoadStatus, userlistData, currentChannel, promiseTimeout;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, getBlockList = _this$props.getBlockList, getBlocksPerHour = _this$props.getBlocksPerHour, getBlocksPerMin = _this$props.getBlocksPerMin, getChaincodeList = _this$props.getChaincodeList, getChannel = _this$props.getChannel, getChannelList = _this$props.getChannelList, getChannels = _this$props.getChannels, getDashStats = _this$props.getDashStats, getPeerList = _this$props.getPeerList, getPeerStatus = _this$props.getPeerStatus, getBlockActivity = _this$props.getBlockActivity, getTransactionByOrg = _this$props.getTransactionByOrg, getTransactionList = _this$props.getTransactionList, getTransactionPerHour = _this$props.getTransactionPerHour, getTransactionPerMin = _this$props.getTransactionPerMin, updateLoadStatus = _this$props.updateLoadStatus, userlistData = _this$props.userlist;\n                _context.next = 3;\n                return getChannel();\n\n              case 3:\n                currentChannel = this.props.currentChannel;\n                promiseTimeout = setTimeout(function () {\n                  _this2.setState({\n                    hasDbError: true\n                  });\n                }, 60000);\n                _context.next = 7;\n                return Promise.all([getBlockList(currentChannel), getBlocksPerHour(currentChannel), getBlocksPerMin(currentChannel), getChaincodeList(currentChannel), getChannelList(currentChannel), getChannels(), getDashStats(currentChannel), getPeerList(currentChannel), getPeerStatus(currentChannel), getBlockActivity(currentChannel), getTransactionByOrg(currentChannel), getTransactionList(currentChannel), getTransactionPerHour(currentChannel), getTransactionPerMin(currentChannel), userlistData()]);\n\n              case 7:\n                clearTimeout(promiseTimeout);\n                updateLoadStatus();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          hasDbError = _this$state.hasDbError,\n          logoStyle = _this$state.logoStyle,\n          settings = _this$state.settings;\n\n      if (hasDbError) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            height: '100vh',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 6\n          }\n        }, \"Please verify your network configuration, database configuration and try again\"));\n      }\n\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.background,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        style: logoStyle,\n        alt: \"Hyperledger Logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 8\n        }\n      }, \"ACCESSING THE NETWORK\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 8\n        }\n      }, \"CONNECTING TO CHANNEL\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 8\n        }\n      }, \"LOADING BLOCKS\")))));\n    }\n  }]);\n\n  return LandingPage;\n}(Component);\nLandingPage.propTypes = {\n  currentChannel: currentChannelType,\n  getBlockList: getBlockListType.isRequired,\n  getBlocksPerHour: getBlocksPerHourType.isRequired,\n  getBlocksPerMin: getBlocksPerMinType.isRequired,\n  getChaincodeList: getChaincodeListType.isRequired,\n  getChannelList: getChannelListType.isRequired,\n  getChannel: getChannelType.isRequired,\n  getChannels: getChannelsType.isRequired,\n  getDashStats: getDashStatsType.isRequired,\n  getPeerList: getPeerListType.isRequired,\n  getPeerStatus: getPeerStatusType.isRequired,\n  getTransactionByOrg: getTransactionByOrgType.isRequired,\n  getTransactionList: getTransactionListType.isRequired,\n  getTransactionPerHour: getTransactionPerHourType.isRequired,\n  getTransactionPerMin: getTransactionPerMinType.isRequired,\n  userlist: getUserListType.isRequired\n};\nLandingPage.defaultProps = {\n  currentChannel: null\n};\nexport default compose(withStyles(styles), connect(function (state) {\n  return {\n    currentChannel: currentChannelSelector(state)\n  };\n}, {\n  getBlockList: blockList,\n  getBlocksPerHour: blockPerHour,\n  getBlocksPerMin: blockPerMin,\n  getChaincodeList: chaincodeList,\n  getChannelList: channelList,\n  getChannel: channel,\n  getChannels: channels,\n  getDashStats: dashStats,\n  getPeerList: peerList,\n  getPeerStatus: peerStatus,\n  getBlockActivity: blockActivity,\n  getTransactionByOrg: transactionByOrg,\n  getTransactionList: transactionList,\n  getTransactionPerHour: transactionPerHour,\n  getTransactionPerMin: transactionPerMin,\n  userlist: userlist //getUserList: userList\n\n}))(LandingPage);","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/components/View/LandingPage.js"],"names":["React","Component","Slider","compose","connect","withStyles","Logo","chartOperations","chartSelectors","tableOperations","authOperations","currentChannelType","getBlockListType","getBlocksPerHourType","getBlocksPerMinType","getChaincodeListType","getChannelListType","getChannelType","getChannelsType","getDashStatsType","getPeerListType","getPeerStatusType","getTransactionByOrgType","getTransactionListType","getTransactionPerHourType","getTransactionPerMinType","getUserListType","blockPerHour","blockPerMin","blockActivity","channel","channelList","dashStats","peerStatus","transactionByOrg","transactionPerHour","transactionPerMin","blockList","chaincodeList","channels","peerList","transactionList","userlist","currentChannelSelector","styles","theme","type","palette","dark","document","body","style","backgroundColor","background","content","marginTop","marginLeft","fontSize","LandingPage","props","state","settings","dots","infinite","autoplay","autoplaySpeed","pauseOnHover","accessibility","speed","slidesToShow","slidesToScroll","logoStyle","width","height","hasDbError","getBlockList","getBlocksPerHour","getBlocksPerMin","getChaincodeList","getChannel","getChannelList","getChannels","getDashStats","getPeerList","getPeerStatus","getBlockActivity","getTransactionByOrg","getTransactionList","getTransactionPerHour","getTransactionPerMin","updateLoadStatus","userlistData","currentChannel","promiseTimeout","setTimeout","setState","Promise","all","clearTimeout","display","justifyContent","alignItems","classes","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Logo from '../../static/images/Logo-VNPAYQR.png';\nimport { chartOperations, chartSelectors } from '../../state/redux/charts';\nimport { tableOperations } from '../../state/redux/tables';\nimport { authOperations } from '../../state/redux/auth';\nimport {\n\tcurrentChannelType,\n\tgetBlockListType,\n\tgetBlocksPerHourType,\n\tgetBlocksPerMinType,\n\tgetChaincodeListType,\n\tgetChannelListType,\n\tgetChannelType,\n\tgetChannelsType,\n\tgetDashStatsType,\n\tgetPeerListType,\n\tgetPeerStatusType,\n\tgetTransactionByOrgType,\n\tgetTransactionListType,\n\tgetTransactionPerHourType,\n\tgetTransactionPerMinType,\n\tgetUserListType\n} from '../../consts/types';\n\nconst {\n\tblockPerHour,\n\tblockPerMin,\n\tblockActivity,\n\tchannel,\n\tchannelList,\n\tdashStats,\n\tpeerStatus,\n\ttransactionByOrg,\n\ttransactionPerHour,\n\ttransactionPerMin /* ,\n\tuserList */\n} = chartOperations;\n\nconst {\n\tblockList,\n\tchaincodeList,\n\tchannels,\n\tpeerList,\n\ttransactionList\n} = tableOperations;\n\nconst { userlist } = authOperations;\n\nconst { currentChannelSelector } = chartSelectors;\n\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\t/* eslint-disable */\n\tdark\n\t\t? (document.body.style.backgroundColor = '#242036')\n\t\t: (document.body.style.backgroundColor = '#f0f5f9');\n\treturn {\n\t\tbackground: {\n\t\t\tbackgroundColor: '#f0f5f9'\n\t\t},\n\t\tcontent: {\n\t\t\tmarginTop: 450,\n\t\t\tmarginLeft: 550,\n\t\t\t'& > h1': {\n\t\t\t\tfontSize: '40pt'\n\t\t\t},\n\t\t\t'& > div': {\n\t\t\t\tmarginLeft: 150\n\t\t\t}\n\t\t}\n\t};\n\t/* eslint-enable */\n};\n\nexport class LandingPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsettings: {\n\t\t\t\tdots: false,\n\t\t\t\tinfinite: true,\n\t\t\t\tautoplay: true,\n\t\t\t\tautoplaySpeed: 2000,\n\t\t\t\tpauseOnHover: false,\n\t\t\t\taccessibility: false,\n\t\t\t\tspeed: 500,\n\t\t\t\tslidesToShow: 1,\n\t\t\t\tslidesToScroll: 1\n\t\t\t},\n\t\t\tlogoStyle: {\n\t\t\t\twidth: '520px',\n\t\t\t\theight: '100px'\n\t\t\t},\n\t\t\thasDbError: false\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst {\n\t\t\tgetBlockList,\n\t\t\tgetBlocksPerHour,\n\t\t\tgetBlocksPerMin,\n\t\t\tgetChaincodeList,\n\t\t\tgetChannel,\n\t\t\tgetChannelList,\n\t\t\tgetChannels,\n\t\t\tgetDashStats,\n\t\t\tgetPeerList,\n\t\t\tgetPeerStatus,\n\t\t\tgetBlockActivity,\n\t\t\tgetTransactionByOrg,\n\t\t\tgetTransactionList,\n\t\t\tgetTransactionPerHour,\n\t\t\tgetTransactionPerMin,\n\t\t\tupdateLoadStatus,\n\t\t\tuserlist: userlistData\n\t\t\t// getUserList\n\t\t} = this.props;\n\t\tawait getChannel();\n\t\tconst { currentChannel } = this.props;\n\n\t\tconst promiseTimeout = setTimeout(() => {\n\t\t\tthis.setState({ hasDbError: true });\n\t\t}, 60000);\n\n\t\tawait Promise.all([\n\t\t\tgetBlockList(currentChannel),\n\t\t\tgetBlocksPerHour(currentChannel),\n\t\t\tgetBlocksPerMin(currentChannel),\n\t\t\tgetChaincodeList(currentChannel),\n\t\t\tgetChannelList(currentChannel),\n\t\t\tgetChannels(),\n\t\t\tgetDashStats(currentChannel),\n\t\t\tgetPeerList(currentChannel),\n\t\t\tgetPeerStatus(currentChannel),\n\t\t\tgetBlockActivity(currentChannel),\n\t\t\tgetTransactionByOrg(currentChannel),\n\t\t\tgetTransactionList(currentChannel),\n\t\t\tgetTransactionPerHour(currentChannel),\n\t\t\tgetTransactionPerMin(currentChannel),\n\t\t\tuserlistData()\n\t\t]);\n\t\tclearTimeout(promiseTimeout);\n\t\tupdateLoadStatus();\n\t}\n\n\trender() {\n\t\tconst { hasDbError, logoStyle, settings } = this.state;\n\t\tif (hasDbError) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: '100vh',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\talignItems: 'center'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\tPlease verify your network configuration, database configuration and try\n\t\t\t\t\t\tagain\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<div className={classes.background}>\n\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t<img src={Logo} style={logoStyle} alt=\"Hyperledger Logo\" />\n\t\t\t\t\t<Slider {...settings}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>ACCESSING THE NETWORK</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>CONNECTING TO CHANNEL</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>LOADING BLOCKS</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Slider>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nLandingPage.propTypes = {\n\tcurrentChannel: currentChannelType,\n\tgetBlockList: getBlockListType.isRequired,\n\tgetBlocksPerHour: getBlocksPerHourType.isRequired,\n\tgetBlocksPerMin: getBlocksPerMinType.isRequired,\n\tgetChaincodeList: getChaincodeListType.isRequired,\n\tgetChannelList: getChannelListType.isRequired,\n\tgetChannel: getChannelType.isRequired,\n\tgetChannels: getChannelsType.isRequired,\n\tgetDashStats: getDashStatsType.isRequired,\n\tgetPeerList: getPeerListType.isRequired,\n\tgetPeerStatus: getPeerStatusType.isRequired,\n\tgetTransactionByOrg: getTransactionByOrgType.isRequired,\n\tgetTransactionList: getTransactionListType.isRequired,\n\tgetTransactionPerHour: getTransactionPerHourType.isRequired,\n\tgetTransactionPerMin: getTransactionPerMinType.isRequired,\n\tuserlist: getUserListType.isRequired\n};\n\nLandingPage.defaultProps = {\n\tcurrentChannel: null\n};\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tcurrentChannel: currentChannelSelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetBlockList: blockList,\n\t\t\tgetBlocksPerHour: blockPerHour,\n\t\t\tgetBlocksPerMin: blockPerMin,\n\t\t\tgetChaincodeList: chaincodeList,\n\t\t\tgetChannelList: channelList,\n\t\t\tgetChannel: channel,\n\t\t\tgetChannels: channels,\n\t\t\tgetDashStats: dashStats,\n\t\t\tgetPeerList: peerList,\n\t\t\tgetPeerStatus: peerStatus,\n\t\t\tgetBlockActivity: blockActivity,\n\t\t\tgetTransactionByOrg: transactionByOrg,\n\t\t\tgetTransactionList: transactionList,\n\t\t\tgetTransactionPerHour: transactionPerHour,\n\t\t\tgetTransactionPerMin: transactionPerMin,\n\t\t\tuserlist: userlist\n\t\t\t//getUserList: userList\n\t\t}\n\t)\n)(LandingPage);\n"]},"metadata":{},"sourceType":"module"}