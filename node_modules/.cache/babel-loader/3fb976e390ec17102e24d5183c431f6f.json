{"ast":null,"code":"/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\nexport var authSelector = function authSelector(state) {\n  return state.auth.token;\n};\nexport var errorSelector = function errorSelector(state) {\n  return state.auth.error;\n};\nexport var networkSelector = function networkSelector(state) {\n  return state.auth.networks;\n};\nexport var registeredSelector = function registeredSelector(state) {\n  return state.auth.registered;\n};\nexport var userlistSelector = function userlistSelector(state) {\n  return state.auth.userlists;\n};\nexport var unregisteredSelector = function unregisteredSelector(state) {\n  return state.auth.unregistered;\n};","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/state/redux/auth/selectors.js"],"names":["authSelector","state","auth","token","errorSelector","error","networkSelector","networks","registeredSelector","registered","userlistSelector","userlists","unregisteredSelector","unregistered"],"mappings":"AAAA;AACA;AACA;AAEA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,CAAWC,KAAf;AAAA,CAA1B;AAEP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAH,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,CAAWG,KAAf;AAAA,CAA3B;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAL,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,CAAWK,QAAf;AAAA,CAA7B;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAP,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,CAAWO,UAAf;AAAA,CAAhC;AAEP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAT,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,CAAWS,SAAf;AAAA,CAA9B;AAEP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAX,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,CAAWW,YAAf;AAAA,CAAlC","sourcesContent":["/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nexport const authSelector = state => state.auth.token;\r\n\r\nexport const errorSelector = state => state.auth.error;\r\n\r\nexport const networkSelector = state => state.auth.networks;\r\n\r\nexport const registeredSelector = state => state.auth.registered;\r\n\r\nexport const userlistSelector = state => state.auth.userlists;\r\n\r\nexport const unregisteredSelector = state => state.auth.unregistered;\r\n"]},"metadata":{},"sourceType":"module"}