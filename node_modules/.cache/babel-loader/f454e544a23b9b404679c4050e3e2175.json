{"ast":null,"code":"import _classCallCheck from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n// SPDX-License-Identifier: Apache-2.0\nvar Auth = /*#__PURE__*/function () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n  }\n\n  _createClass(Auth, null, [{\n    key: \"authenticateUser\",\n    value:\n    /**\r\n     * Authenticate a user. Save a token string in Local Storage\r\n     *\r\n     * @param {string} token\r\n     */\n    function authenticateUser(token) {\n      localStorage.setItem('token', token);\n    }\n    /**\r\n     * Check if a user is authenticated - check if a token is saved in Local Storage\r\n     *\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isUserAuthenticated\",\n    value: function isUserAuthenticated() {\n      return localStorage.getItem('token') !== null;\n    }\n    /**\r\n     * Deauthenticate a user. Remove a token from Local Storage.\r\n     *\r\n     */\n\n  }, {\n    key: \"deauthenticateUser\",\n    value: function deauthenticateUser() {\n      localStorage.removeItem('token');\n    }\n    /**\r\n     * Get a token value.\r\n     *\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      return localStorage.getItem('token');\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/state/Auth.js"],"names":["Auth","token","localStorage","setItem","getItem","removeItem"],"mappings":";;;AAAA;IACqBA,I;;;;;;;;AACpB;AACD;AACA;AACA;AACA;AACC,8BAAwBC,KAAxB,EAA+B;AAC9BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACA;AAED;AACD;AACA;AACA;AACA;;;;WACC,+BAA6B;AAC5B,aAAOC,YAAY,CAACE,OAAb,CAAqB,OAArB,MAAkC,IAAzC;AACA;AAED;AACD;AACA;AACA;;;;WACC,8BAA4B;AAC3BF,MAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACA;AAED;AACD;AACA;AACA;AACA;;;;WAEC,oBAAkB;AACjB,aAAOH,YAAY,CAACE,OAAb,CAAqB,OAArB,CAAP;AACA;;;;;;SAnCmBJ,I","sourcesContent":["// SPDX-License-Identifier: Apache-2.0\r\nexport default class Auth {\r\n\t/**\r\n\t * Authenticate a user. Save a token string in Local Storage\r\n\t *\r\n\t * @param {string} token\r\n\t */\r\n\tstatic authenticateUser(token) {\r\n\t\tlocalStorage.setItem('token', token);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if a user is authenticated - check if a token is saved in Local Storage\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isUserAuthenticated() {\r\n\t\treturn localStorage.getItem('token') !== null;\r\n\t}\r\n\r\n\t/**\r\n\t * Deauthenticate a user. Remove a token from Local Storage.\r\n\t *\r\n\t */\r\n\tstatic deauthenticateUser() {\r\n\t\tlocalStorage.removeItem('token');\r\n\t}\r\n\r\n\t/**\r\n\t * Get a token value.\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\r\n\tstatic getToken() {\r\n\t\treturn localStorage.getItem('token');\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}