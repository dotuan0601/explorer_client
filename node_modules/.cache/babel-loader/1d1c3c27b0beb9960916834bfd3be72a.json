{"ast":null,"code":"import _objectWithoutProperties from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _objectSpread from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"to\", \"label\"];\nvar _jsxFileName = \"/home/teko/work/new_explorer/client/src/layout/Header/HeaderView.js\";\n\n/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse } from 'reactstrap';\nimport { HashRouter as Router, NavLink } from 'react-router-dom';\nimport Switch from '@material-ui/core/Switch';\nimport FontAwesome from 'react-fontawesome';\nimport Drawer from '@material-ui/core/Drawer';\nimport Websocket from 'react-websocket';\nimport Badge from '@material-ui/core/Badge';\nimport Dialog from '@material-ui/core/Dialog';\nimport Loader from 'react-loader-spinner';\nimport Select from '../../components/Styled/Select';\nimport NotificationsPanel from '../../components/Panels/NotificationsPanel';\nimport Logo from '../../static/images/Logo-VNPAYQR.png';\nimport AdminPanel from '../../components/Panels/AdminPanel';\nimport { chartOperations, chartSelectors } from '../../state/redux/charts';\nimport { tableOperations, tableSelectors } from '../../state/redux/tables';\nimport { themeSelectors } from '../../state/redux/theme';\nimport UsersPanal from '../../components/UsersPanal/UsersPanal';\nimport { authOperations } from '../../state/redux/auth'; // import Enroll from '../Enroll';\n\nimport { currentChannelType, channelsType, getBlockListType, getBlocksPerHourType, getBlocksPerMinType, getChaincodeListType, getChannelsType, getChangeChannelType, getDashStatsType, getPeerListType, getPeerStatusType, getTransactionByOrgType, getTransactionPerHourType, getTransactionPerMinType, refreshType } from '../../consts/types';\nvar blockPerHour = chartOperations.blockPerHour,\n    blockPerMin = chartOperations.blockPerMin,\n    transactionPerHour = chartOperations.transactionPerHour,\n    transactionPerMin = chartOperations.transactionPerMin,\n    transactionByOrg = chartOperations.transactionByOrg,\n    dashStats = chartOperations.dashStats,\n    changeChannel = chartOperations.changeChannel,\n    blockActivity = chartOperations.blockActivity,\n    peerStatus = chartOperations.peerStatus;\nvar blockList = tableOperations.blockList,\n    chaincodeList = tableOperations.chaincodeList,\n    channels = tableOperations.channels,\n    peerList = tableOperations.peerList,\n    transaction = tableOperations.transaction,\n    transactionList = tableOperations.transactionList;\nvar currentChannelSelector = chartSelectors.currentChannelSelector;\nvar channelsSelector = tableSelectors.channelsSelector;\n/* istanbul ignore next */\n\nvar styles = function styles(theme) {\n  var type = theme.palette.type;\n  var dark = type === 'dark';\n  var darkNavbar = dark && {\n    background: 'linear-gradient(to right, rgb(236, 233, 252), #4d4575)'\n  };\n  return {\n    logo: {\n      width: 180,\n      height: 50,\n      '@media (max-width: 1415px) and (min-width: 990px)': {\n        width: 200,\n        height: 40\n      }\n    },\n    navbarHeader: _objectSpread({\n      backgroundColor: '#e8e8e8'\n    }, darkNavbar),\n    tab: {\n      color: dark ? '#242036' : '#000000',\n      fontSize: '1.05rem',\n      fontWeight: 800,\n      height: 50,\n      margin: 10,\n      '&:hover': {\n        color: dark ? '#242036' : '#000000'\n      },\n      '@media (max-width: 1415px) and (min-width: 990px)': {\n        fontSize: '0.85rem'\n      }\n    },\n    activeTab: {\n      color: '#ffffff',\n      backgroundColor: dark ? '#453e68' : '#58c5c2',\n      height: 60,\n      marginTop: 20,\n      padding: 10,\n      '&:hover': {\n        color: '#ffffff'\n      },\n      '@media (max-width: 1415px) and (min-width: 990px)': {\n        padding: '8%'\n      }\n    },\n    adminButton: {\n      paddingTop: 0,\n      marginTop: 0\n    },\n    themeSwitch: {\n      height: 50,\n      lineHeight: '50px',\n      textAlign: 'center',\n      marginLeft: 15,\n      width: 100,\n      paddingTop: 0,\n      '@media (max-width: 1415px) and (min-width: 990px)': {\n        display: 'flex'\n      },\n      '@media (max-width: 990px)': {\n        marginLeft: 0\n      }\n    },\n    bell: {\n      color: dark ? 'rgb(139, 143, 148)' : '#5f6164',\n      fontSize: '18pt',\n      margin: 8,\n      float: 'none',\n      '&:hover': {\n        color: dark ? '#c1d7f0' : '#24272a'\n      }\n    },\n    channel: {\n      width: 200,\n      margin: 8,\n      float: 'none',\n      '@media (max-width: 1415px) and (min-width: 990px)': {\n        width: '9em'\n      }\n    },\n    channelLoader: {\n      textAlign: 'center',\n      padding: 20\n    },\n    loader: {\n      margin: '0 auto',\n      width: 100\n    },\n    sunIcon: {\n      color: dark ? 'rgb(247, 200, 92)' : 'rgb(245, 185, 47)',\n      '@media (max-width: 1415px) and (min-width: 990px)': {\n        marginTop: 15\n      }\n    },\n    moonIcon: {\n      color: dark ? '#9cd7f7' : 'rgb(104, 195, 245)',\n      '@media (max-width: 1415px) and (min-width: 990px)': {\n        marginTop: 15\n      }\n    },\n    logout: {\n      marginRight: -3\n    },\n    logoutIcon: {\n      color: dark ? 'rgb(139, 143, 148)' : '#5f6164',\n      fontSize: '18pt',\n      float: 'none',\n      '&:hover': {\n        color: dark ? '#c1d7f0' : '#24272a'\n      },\n      marginLeft: 5,\n      marginTop: 14,\n      cursor: 'pointer'\n    },\n    user: {\n      marginRight: -3\n    },\n    userIcon: {\n      color: dark ? 'rgb(139, 143, 148)' : '#5f6164',\n      fontSize: '18pt',\n      float: 'none',\n      '&:hover': {\n        color: dark ? '#c1d7f0' : '#24272a'\n      },\n      marginLeft: 5,\n      marginTop: 14,\n      cursor: 'pointer'\n    },\n    toggleIcon: {\n      color: dark ? '#242136' : '#58c5c2',\n      fontSize: '1.75em',\n      '&:focus': {\n        outline: 'none'\n      }\n    }\n  };\n};\n\nexport var HeaderView = /*#__PURE__*/function (_Component) {\n  _inherits(HeaderView, _Component);\n\n  var _super = _createSuper(HeaderView);\n\n  function HeaderView(props) {\n    var _this;\n\n    _classCallCheck(this, HeaderView);\n\n    _this = _super.call(this, props);\n\n    _this.toggle = function () {\n      var isOpen = _this.state.isOpen;\n\n      if (window.matchMedia('(max-width:992px)').matches) {\n        _this.setState({\n          isOpen: !isOpen\n        });\n      }\n    };\n\n    _this.closeToggle = function () {\n      return _this.state.isOpen && _this.toggle();\n    };\n\n    _this.handleChange = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(selectedChannel) {\n        var getChangeChannel;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"binhnt.layout.header.HeaderView.handleChange: Select channel \");\n\n                if (!(_this.state.channels.length > 1)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                getChangeChannel = _this.props.getChangeChannel;\n                clearInterval(_this.interVal);\n                _context.next = 6;\n                return _this.handleOpen();\n\n              case 6:\n                _this.setState({\n                  selectedChannel: selectedChannel\n                });\n\n                getChangeChannel(selectedChannel.value);\n                _context.next = 10;\n                return _this.syncData(selectedChannel.value);\n\n              case 10:\n                _this.interVal = setInterval(function () {\n                  _this.syncData(selectedChannel.value);\n                }, 60000);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleOpen = function () {\n      _this.setState({\n        modalOpen: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.registerOpen = function () {\n      _this.setState(function () {\n        return {\n          registerOpen: true\n        };\n      });\n    };\n\n    _this.registerClose = function () {\n      _this.setState(function () {\n        return {\n          registerOpen: false\n        };\n      });\n    };\n\n    _this.onRegister = function () {\n      _this.registerClose();\n    };\n\n    _this.logout = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.props.logout();\n\n            case 2:\n              result = _context2.sent;\n\n              if (result.status === 'Success') {\n                window.location = '/';\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.handleDrawOpen = function (drawer) {\n      switch (drawer) {\n        case 'notifyDrawer':\n          {\n            _this.setState({\n              notifyDrawer: true\n            });\n\n            _this.setState({\n              notifyCount: 0\n            });\n\n            break;\n          }\n\n        case 'adminDrawer':\n          {\n            _this.setState({\n              adminDrawer: true\n            });\n\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    };\n\n    _this.handleDrawClose = function (drawer) {\n      switch (drawer) {\n        case 'notifyDrawer':\n          {\n            _this.setState({\n              notifyDrawer: false\n            });\n\n            break;\n          }\n\n        case 'adminDrawer':\n          {\n            _this.setState({\n              adminDrawer: false\n            });\n\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    };\n\n    _this.handleThemeChange = function (mode) {\n      var refresh = _this.props.refresh;\n      refresh(mode === 'dark' ? 'light' : 'dark');\n    };\n\n    _this.state = {\n      isOpen: false,\n      notifyDrawer: false,\n      adminDrawer: false,\n      channels: [],\n      notifyCount: 0,\n      notifications: [],\n      isLoading: true,\n      modalOpen: false,\n      registerOpen: false,\n      selectedChannel: {}\n    };\n    return _this;\n  }\n\n  _createClass(HeaderView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          channelArr = _this$props.channels,\n          currentChannel = _this$props.currentChannel; // console.log(\"Binhnt: Layout.Header.HeaderView.componentDidMount: props =  \", this.props)\n\n      var arr = [];\n      var selectedValue = {};\n      channelArr.forEach(function (element) {\n        if (element.channel_genesis_hash === currentChannel) {\n          selectedValue = {\n            value: element.channel_genesis_hash,\n            label: element.channelname\n          };\n        }\n\n        arr.push({\n          value: element.channel_genesis_hash,\n          label: element.channelname\n        });\n      });\n      this.setState({\n        currentChannel: currentChannel,\n        channels: arr,\n        isLoading: false,\n        selectedChannel: selectedValue\n      });\n      this.interVal = setInterval(function () {\n        _this2.syncData(currentChannel);\n      }, 60000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interVal);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props2 = this.props,\n          currentChannel = _this$props2.currentChannel,\n          getChangeChannel = _this$props2.getChangeChannel;\n      var options = [];\n      var selectedValue = {};\n\n      if (nextProps.channels.length > 0) {\n        nextProps.channels.forEach(function (element) {\n          options.push({\n            value: element.channel_genesis_hash,\n            label: element.channelname\n          });\n\n          if (nextProps.currentChannel == null || nextProps.currentChannel === undefined) {\n            if (element.channel_genesis_hash != null) {\n              selectedValue = {\n                value: element.channel_genesis_hash,\n                label: element.channelname\n              };\n            }\n          } else if (element.channel_genesis_hash === nextProps.currentChannel) {\n            selectedValue = {\n              value: element.channel_genesis_hash,\n              label: element.channelname\n            };\n          }\n        });\n      }\n\n      if (nextProps.currentChannel === null || nextProps.currentChannel === undefined) {\n        console.log(\"binhnt.HeaderView: call getChangeChannel: value = \", selectedValue.value);\n        getChangeChannel(selectedValue.value);\n      }\n\n      this.setState({\n        currentChannel: currentChannel,\n        channels: options,\n        isLoading: false,\n        selectedChannel: selectedValue\n      });\n\n      if (nextProps.currentChannel !== currentChannel) {\n        this.syncData(nextProps.currentChannel);\n      }\n    }\n  }, {\n    key: \"handleData\",\n    value: function handleData(notification) {\n      // this.props.getNotification(notification);\n      var _this$state = this.state,\n          notifications = _this$state.notifications,\n          notifyCount = _this$state.notifyCount,\n          currentChannel = _this$state.currentChannel;\n      var notifyArr = notifications;\n      notifyArr.unshift(JSON.parse(notification));\n      this.setState({\n        notifications: notifyArr\n      });\n      this.setState({\n        notifyCount: notifyCount + 1\n      });\n      this.syncData(currentChannel);\n    }\n  }, {\n    key: \"reloadChannels\",\n    value: function () {\n      var _reloadChannels = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var getChannels;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                getChannels = this.props.getChannels;\n                _context3.next = 3;\n                return getChannels();\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function reloadChannels() {\n        return _reloadChannels.apply(this, arguments);\n      }\n\n      return reloadChannels;\n    }()\n  }, {\n    key: \"syncData\",\n    value: function () {\n      var _syncData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(currentChannel) {\n        var _this$props3, getBlockList, getBlocksPerHour, getBlocksPerMin, getChaincodeList, getChannels, getDashStats, getPeerList, getPeerStatus, getTransactionByOrg, getTransactionList, getTransactionPerHour, getTransactionPerMin, getBlockActivity;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$props3 = this.props, getBlockList = _this$props3.getBlockList, getBlocksPerHour = _this$props3.getBlocksPerHour, getBlocksPerMin = _this$props3.getBlocksPerMin, getChaincodeList = _this$props3.getChaincodeList, getChannels = _this$props3.getChannels, getDashStats = _this$props3.getDashStats, getPeerList = _this$props3.getPeerList, getPeerStatus = _this$props3.getPeerStatus, getTransactionByOrg = _this$props3.getTransactionByOrg, getTransactionList = _this$props3.getTransactionList, getTransactionPerHour = _this$props3.getTransactionPerHour, getTransactionPerMin = _this$props3.getTransactionPerMin, getBlockActivity = _this$props3.getBlockActivity;\n                _context4.next = 3;\n                return Promise.all([getBlockList(currentChannel), getBlocksPerHour(currentChannel), getBlocksPerMin(currentChannel), getChaincodeList(currentChannel), getChannels(), getDashStats(currentChannel), getBlockActivity(currentChannel), getPeerList(currentChannel), getPeerStatus(currentChannel), getTransactionByOrg(currentChannel), getTransactionList(currentChannel), getTransactionPerHour(currentChannel), getTransactionPerMin(currentChannel)]);\n\n              case 3:\n                this.handleClose();\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function syncData(_x2) {\n        return _syncData.apply(this, arguments);\n      }\n\n      return syncData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          mode = _this$props4.mode,\n          classes = _this$props4.classes;\n      var _window$location = window.location,\n          hostname = _window$location.hostname,\n          port = _window$location.port;\n      var webSocketProtocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\n      var webSocketUrl = \"\".concat(webSocketProtocol, \"://\").concat(hostname, \":\").concat(port, \"/\");\n      var dark = mode === 'dark';\n      var _this$state2 = this.state,\n          isLoading = _this$state2.isLoading,\n          selectedChannel = _this$state2.selectedChannel,\n          stateChannels = _this$state2.channels,\n          notifyCount = _this$state2.notifyCount,\n          notifyDrawer = _this$state2.notifyDrawer,\n          adminDrawer = _this$state2.adminDrawer,\n          modalOpen = _this$state2.modalOpen,\n          registerOpen = _this$state2.registerOpen,\n          notifications = _this$state2.notifications;\n      var links = [{\n        to: '/',\n        label: 'DASHBOARD',\n        exact: true\n      }, // { to: '/accounts', label: 'ACCOUNTS' },\n      {\n        to: '/network',\n        label: 'NETWORK'\n      }, {\n        to: '/blocks',\n        label: 'BLOCKS'\n      }, {\n        to: '/transactions',\n        label: 'TRANSACTIONS'\n      }, {\n        to: '/chaincodes',\n        label: 'CHAINCODES'\n      }, {\n        to: '/channels',\n        label: 'CHANNELS'\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Websocket, {\n        url: webSocketUrl,\n        onMessage: this.handleData.bind(this),\n        reconnect: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        className: classes.navbarHeader,\n        expand: \"lg\",\n        fixed: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(NavbarBrand, {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        className: classes.logo,\n        alt: \"Hyperledger Logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(NavbarToggler, {\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesome, {\n        name: \"bars\",\n        className: classes.toggleIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        className: \"ml-auto navbar-left\",\n        navbar: true,\n        onMouseLeave: this.closeToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 9\n        }\n      }, links.map(function (_ref3) {\n        var to = _ref3.to,\n            label = _ref3.label,\n            props = _objectWithoutProperties(_ref3, _excluded);\n\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: to,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, Object.assign({\n          to: to,\n          className: classes.tab,\n          activeClassName: classes.activeTab,\n          onClick: _this3.toggle\n        }, props, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 12\n          }\n        }), label));\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.adminButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        className: classes.channel,\n        placeholder: \"Select Channel...\",\n        required: true,\n        name: \"form-field-name\",\n        isLoading: isLoading,\n        value: selectedChannel,\n        onChange: this.handleChange,\n        onFocus: this.reloadChannels.bind(this),\n        options: stateChannels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(classes.adminButton, \" \").concat(classes.themeSwitch),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesome, {\n        name: \"sun-o\",\n        className: classes.sunIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Switch, {\n        onChange: function onChange() {\n          return _this3.handleThemeChange(mode);\n        },\n        checked: dark,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FontAwesome, {\n        name: \"moon-o\",\n        className: classes.moonIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(classes.adminButton, classes.user),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesome, {\n        name: \"user-plus\",\n        className: classes.userIcon,\n        onClick: function onClick() {\n          return _this3.registerOpen();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(classes.adminButton, classes.logoutk),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesome, {\n        name: \"sign-out\",\n        className: classes.logout,\n        onClick: function onClick() {\n          return _this3.logout();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }\n      }))))), /*#__PURE__*/React.createElement(Drawer, {\n        anchor: \"right\",\n        open: notifyDrawer,\n        onClose: function onClose() {\n          return _this3.handleDrawClose('notifyDrawer');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        tabIndex: 0,\n        role: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(NotificationsPanel, {\n        notifications: notifications,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 9\n        }\n      }))), /*#__PURE__*/React.createElement(Drawer, {\n        anchor: \"right\",\n        open: adminDrawer,\n        onClose: function onClose() {\n          return _this3.handleDrawClose('adminDrawer');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        tabIndex: 0,\n        role: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(AdminPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 9\n        }\n      }))), /*#__PURE__*/React.createElement(Dialog, {\n        open: registerOpen,\n        onClose: this.registerClose,\n        fullWidth: false,\n        maxWidth: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(UsersPanal, {\n        onClose: this.registerClose,\n        onRegister: this.onRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 8\n        }\n      })), /*#__PURE__*/React.createElement(Dialog, {\n        open: modalOpen,\n        onClose: this.handleClose,\n        fullWidth: false,\n        maxWidth: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.channelLoader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 9\n        }\n      }, \"Loading Channel Details\"), /*#__PURE__*/React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"#005069\",\n        height: 70,\n        width: 70,\n        className: classes.loader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 9\n        }\n      }))))));\n    }\n  }]);\n\n  return HeaderView;\n}(Component);\nHeaderView.propTypes = {\n  currentChannel: currentChannelType.isRequired,\n  channels: channelsType.isRequired,\n  getBlockList: getBlockListType.isRequired,\n  getBlocksPerHour: getBlocksPerHourType.isRequired,\n  getBlocksPerMin: getBlocksPerMinType.isRequired,\n  getChangeChannel: getChangeChannelType.isRequired,\n  getChaincodeList: getChaincodeListType.isRequired,\n  getChannels: getChannelsType.isRequired,\n  getDashStats: getDashStatsType.isRequired,\n  getPeerList: getPeerListType.isRequired,\n  getPeerStatus: getPeerStatusType.isRequired,\n  getTransactionByOrg: getTransactionByOrgType.isRequired,\n  getTransactionPerHour: getTransactionPerHourType.isRequired,\n  getTransactionPerMin: getTransactionPerMinType.isRequired,\n  refresh: refreshType.isRequired\n};\nvar modeSelector = themeSelectors.modeSelector;\nexport default compose(withStyles(styles), connect(function (state) {\n  return {\n    currentChannel: currentChannelSelector(state),\n    channels: channelsSelector(state),\n    mode: modeSelector(state)\n  };\n}, {\n  getBlockList: blockList,\n  getBlocksPerHour: blockPerHour,\n  getBlocksPerMin: blockPerMin,\n  getChaincodeList: chaincodeList,\n  getChangeChannel: changeChannel,\n  // not in syncdata\n  getChannels: channels,\n  getDashStats: dashStats,\n  getPeerList: peerList,\n  getPeerStatus: peerStatus,\n  getBlockActivity: blockActivity,\n  getTransactionByOrg: transactionByOrg,\n  getTransactionList: transactionList,\n  getTransactionPerHour: transactionPerHour,\n  getTransactionPerMin: transactionPerMin,\n  logout: authOperations.logout\n}))(HeaderView);","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/layout/Header/HeaderView.js"],"names":["React","Component","compose","connect","classNames","withStyles","Nav","Navbar","NavbarBrand","NavbarToggler","Collapse","HashRouter","Router","NavLink","Switch","FontAwesome","Drawer","Websocket","Badge","Dialog","Loader","Select","NotificationsPanel","Logo","AdminPanel","chartOperations","chartSelectors","tableOperations","tableSelectors","themeSelectors","UsersPanal","authOperations","currentChannelType","channelsType","getBlockListType","getBlocksPerHourType","getBlocksPerMinType","getChaincodeListType","getChannelsType","getChangeChannelType","getDashStatsType","getPeerListType","getPeerStatusType","getTransactionByOrgType","getTransactionPerHourType","getTransactionPerMinType","refreshType","blockPerHour","blockPerMin","transactionPerHour","transactionPerMin","transactionByOrg","dashStats","changeChannel","blockActivity","peerStatus","blockList","chaincodeList","channels","peerList","transaction","transactionList","currentChannelSelector","channelsSelector","styles","theme","type","palette","dark","darkNavbar","background","logo","width","height","navbarHeader","backgroundColor","tab","color","fontSize","fontWeight","margin","activeTab","marginTop","padding","adminButton","paddingTop","themeSwitch","lineHeight","textAlign","marginLeft","display","bell","float","channel","channelLoader","loader","sunIcon","moonIcon","logout","marginRight","logoutIcon","cursor","user","userIcon","toggleIcon","outline","HeaderView","props","toggle","isOpen","state","window","matchMedia","matches","setState","closeToggle","handleChange","selectedChannel","console","log","length","getChangeChannel","clearInterval","interVal","handleOpen","value","syncData","setInterval","modalOpen","handleClose","registerOpen","registerClose","onRegister","result","status","location","handleDrawOpen","drawer","notifyDrawer","notifyCount","adminDrawer","handleDrawClose","handleThemeChange","mode","refresh","notifications","isLoading","channelArr","currentChannel","arr","selectedValue","forEach","element","channel_genesis_hash","label","channelname","push","nextProps","options","undefined","notification","notifyArr","unshift","JSON","parse","getChannels","getBlockList","getBlocksPerHour","getBlocksPerMin","getChaincodeList","getDashStats","getPeerList","getPeerStatus","getTransactionByOrg","getTransactionList","getTransactionPerHour","getTransactionPerMin","getBlockActivity","Promise","all","classes","hostname","port","webSocketProtocol","protocol","webSocketUrl","stateChannels","links","to","exact","handleData","bind","map","reloadChannels","logoutk","propTypes","isRequired","modeSelector"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,WAAtB,EAAmCC,aAAnC,EAAkDC,QAAlD,QAAkE,YAAlE;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,OAA/B,QAA8C,kBAA9C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,0BAAhD;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,0BAAhD;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,cAAT,QAA+B,wBAA/B,C,CAEA;;AAEA,SACCC,kBADD,EAECC,YAFD,EAGCC,gBAHD,EAICC,oBAJD,EAKCC,mBALD,EAMCC,oBAND,EAOCC,eAPD,EAQCC,oBARD,EASCC,gBATD,EAUCC,eAVD,EAWCC,iBAXD,EAYCC,uBAZD,EAaCC,yBAbD,EAcCC,wBAdD,EAeCC,WAfD,QAgBO,oBAhBP;AAkBA,IACCC,YADD,GAUItB,eAVJ,CACCsB,YADD;AAAA,IAECC,WAFD,GAUIvB,eAVJ,CAECuB,WAFD;AAAA,IAGCC,kBAHD,GAUIxB,eAVJ,CAGCwB,kBAHD;AAAA,IAICC,iBAJD,GAUIzB,eAVJ,CAICyB,iBAJD;AAAA,IAKCC,gBALD,GAUI1B,eAVJ,CAKC0B,gBALD;AAAA,IAMCC,SAND,GAUI3B,eAVJ,CAMC2B,SAND;AAAA,IAOCC,aAPD,GAUI5B,eAVJ,CAOC4B,aAPD;AAAA,IAQCC,aARD,GAUI7B,eAVJ,CAQC6B,aARD;AAAA,IASCC,UATD,GAUI9B,eAVJ,CASC8B,UATD;AAYA,IACCC,SADD,GAOI7B,eAPJ,CACC6B,SADD;AAAA,IAECC,aAFD,GAOI9B,eAPJ,CAEC8B,aAFD;AAAA,IAGCC,QAHD,GAOI/B,eAPJ,CAGC+B,QAHD;AAAA,IAICC,QAJD,GAOIhC,eAPJ,CAICgC,QAJD;AAAA,IAKCC,WALD,GAOIjC,eAPJ,CAKCiC,WALD;AAAA,IAMCC,eAND,GAOIlC,eAPJ,CAMCkC,eAND;AASA,IAAQC,sBAAR,GAAmCpC,cAAnC,CAAQoC,sBAAR;AACA,IAAQC,gBAAR,GAA6BnC,cAA7B,CAAQmC,gBAAR;AACA;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACvB,MAAQC,IAAR,GAAiBD,KAAK,CAACE,OAAvB,CAAQD,IAAR;AACA,MAAME,IAAI,GAAGF,IAAI,KAAK,MAAtB;AACA,MAAMG,UAAU,GAAGD,IAAI,IAAI;AAC1BE,IAAAA,UAAU,EAAE;AADc,GAA3B;AAGA,SAAO;AACNC,IAAAA,IAAI,EAAE;AACLC,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,MAAM,EAAE,EAFH;AAGL,2DAAqD;AACpDD,QAAAA,KAAK,EAAE,GAD6C;AAEpDC,QAAAA,MAAM,EAAE;AAF4C;AAHhD,KADA;AASNC,IAAAA,YAAY;AACXC,MAAAA,eAAe,EAAE;AADN,OAERN,UAFQ,CATN;AAaNO,IAAAA,GAAG,EAAE;AACJC,MAAAA,KAAK,EAAET,IAAI,GAAG,SAAH,GAAe,SADtB;AAEJU,MAAAA,QAAQ,EAAE,SAFN;AAGJC,MAAAA,UAAU,EAAE,GAHR;AAIJN,MAAAA,MAAM,EAAE,EAJJ;AAKJO,MAAAA,MAAM,EAAE,EALJ;AAMJ,iBAAW;AACVH,QAAAA,KAAK,EAAET,IAAI,GAAG,SAAH,GAAe;AADhB,OANP;AASJ,2DAAqD;AACpDU,QAAAA,QAAQ,EAAE;AAD0C;AATjD,KAbC;AA0BNG,IAAAA,SAAS,EAAE;AACVJ,MAAAA,KAAK,EAAE,SADG;AAEVF,MAAAA,eAAe,EAAEP,IAAI,GAAG,SAAH,GAAe,SAF1B;AAGVK,MAAAA,MAAM,EAAE,EAHE;AAIVS,MAAAA,SAAS,EAAE,EAJD;AAKVC,MAAAA,OAAO,EAAE,EALC;AAMV,iBAAW;AACVN,QAAAA,KAAK,EAAE;AADG,OAND;AASV,2DAAqD;AACpDM,QAAAA,OAAO,EAAE;AAD2C;AAT3C,KA1BL;AAuCNC,IAAAA,WAAW,EAAE;AACZC,MAAAA,UAAU,EAAE,CADA;AAEZH,MAAAA,SAAS,EAAE;AAFC,KAvCP;AA2CNI,IAAAA,WAAW,EAAE;AACZb,MAAAA,MAAM,EAAE,EADI;AAEZc,MAAAA,UAAU,EAAE,MAFA;AAGZC,MAAAA,SAAS,EAAE,QAHC;AAIZC,MAAAA,UAAU,EAAE,EAJA;AAKZjB,MAAAA,KAAK,EAAE,GALK;AAMZa,MAAAA,UAAU,EAAE,CANA;AAOZ,2DAAqD;AACpDK,QAAAA,OAAO,EAAE;AAD2C,OAPzC;AAUZ,mCAA6B;AAC5BD,QAAAA,UAAU,EAAE;AADgB;AAVjB,KA3CP;AAyDNE,IAAAA,IAAI,EAAE;AACLd,MAAAA,KAAK,EAAET,IAAI,GAAG,oBAAH,GAA0B,SADhC;AAELU,MAAAA,QAAQ,EAAE,MAFL;AAGLE,MAAAA,MAAM,EAAE,CAHH;AAILY,MAAAA,KAAK,EAAE,MAJF;AAKL,iBAAW;AACVf,QAAAA,KAAK,EAAET,IAAI,GAAG,SAAH,GAAe;AADhB;AALN,KAzDA;AAkENyB,IAAAA,OAAO,EAAE;AACRrB,MAAAA,KAAK,EAAE,GADC;AAERQ,MAAAA,MAAM,EAAE,CAFA;AAGRY,MAAAA,KAAK,EAAE,MAHC;AAIR,2DAAqD;AACpDpB,QAAAA,KAAK,EAAE;AAD6C;AAJ7C,KAlEH;AA0ENsB,IAAAA,aAAa,EAAE;AACdN,MAAAA,SAAS,EAAE,QADG;AAEdL,MAAAA,OAAO,EAAE;AAFK,KA1ET;AA8ENY,IAAAA,MAAM,EAAE;AACPf,MAAAA,MAAM,EAAE,QADD;AAEPR,MAAAA,KAAK,EAAE;AAFA,KA9EF;AAkFNwB,IAAAA,OAAO,EAAE;AACRnB,MAAAA,KAAK,EAAET,IAAI,GAAG,mBAAH,GAAyB,mBAD5B;AAER,2DAAqD;AACpDc,QAAAA,SAAS,EAAE;AADyC;AAF7C,KAlFH;AAwFNe,IAAAA,QAAQ,EAAE;AACTpB,MAAAA,KAAK,EAAET,IAAI,GAAG,SAAH,GAAe,oBADjB;AAET,2DAAqD;AACpDc,QAAAA,SAAS,EAAE;AADyC;AAF5C,KAxFJ;AA8FNgB,IAAAA,MAAM,EAAE;AACPC,MAAAA,WAAW,EAAE,CAAC;AADP,KA9FF;AAiGNC,IAAAA,UAAU,EAAE;AACXvB,MAAAA,KAAK,EAAET,IAAI,GAAG,oBAAH,GAA0B,SAD1B;AAEXU,MAAAA,QAAQ,EAAE,MAFC;AAGXc,MAAAA,KAAK,EAAE,MAHI;AAIX,iBAAW;AACVf,QAAAA,KAAK,EAAET,IAAI,GAAG,SAAH,GAAe;AADhB,OAJA;AAOXqB,MAAAA,UAAU,EAAE,CAPD;AAQXP,MAAAA,SAAS,EAAE,EARA;AASXmB,MAAAA,MAAM,EAAE;AATG,KAjGN;AA4GNC,IAAAA,IAAI,EAAE;AACLH,MAAAA,WAAW,EAAE,CAAC;AADT,KA5GA;AA+GNI,IAAAA,QAAQ,EAAE;AACT1B,MAAAA,KAAK,EAAET,IAAI,GAAG,oBAAH,GAA0B,SAD5B;AAETU,MAAAA,QAAQ,EAAE,MAFD;AAGTc,MAAAA,KAAK,EAAE,MAHE;AAIT,iBAAW;AACVf,QAAAA,KAAK,EAAET,IAAI,GAAG,SAAH,GAAe;AADhB,OAJF;AAOTqB,MAAAA,UAAU,EAAE,CAPH;AAQTP,MAAAA,SAAS,EAAE,EARF;AASTmB,MAAAA,MAAM,EAAE;AATC,KA/GJ;AA0HNG,IAAAA,UAAU,EAAE;AACX3B,MAAAA,KAAK,EAAET,IAAI,GAAG,SAAH,GAAe,SADf;AAEXU,MAAAA,QAAQ,EAAE,QAFC;AAGX,iBAAW;AACV2B,QAAAA,OAAO,EAAE;AADC;AAHA;AA1HN,GAAP;AAkIA,CAxID;;AA0IA,WAAaC,UAAb;AAAA;;AAAA;;AACC,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,UAoGnBC,MApGmB,GAoGV,YAAM;AACd,UAAQC,MAAR,GAAmB,MAAKC,KAAxB,CAAQD,MAAR;;AACA,UAAIE,MAAM,CAACC,UAAP,CAAkB,mBAAlB,EAAuCC,OAA3C,EAAoD;AACnD,cAAKC,QAAL,CAAc;AACbL,UAAAA,MAAM,EAAE,CAACA;AADI,SAAd;AAGA;AACD,KA3GkB;;AAAA,UA6GnBM,WA7GmB,GA6GL;AAAA,aAAM,MAAKL,KAAL,CAAWD,MAAX,IAAqB,MAAKD,MAAL,EAA3B;AAAA,KA7GK;;AAAA,UA+GnBQ,YA/GmB;AAAA,0EA+GJ,iBAAMC,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,gBAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;;AADc,sBAEV,MAAKT,KAAL,CAAWpD,QAAX,CAAoB8D,MAApB,GAA6B,CAFnB;AAAA;AAAA;AAAA;;AAGLC,gBAAAA,gBAHK,GAGgB,MAAKd,KAHrB,CAGLc,gBAHK;AAIbC,gBAAAA,aAAa,CAAC,MAAKC,QAAN,CAAb;AAJa;AAAA,uBAKP,MAAKC,UAAL,EALO;;AAAA;AAMb,sBAAKV,QAAL,CAAc;AAAEG,kBAAAA,eAAe,EAAfA;AAAF,iBAAd;;AACAI,gBAAAA,gBAAgB,CAACJ,eAAe,CAACQ,KAAjB,CAAhB;AAPa;AAAA,uBAQP,MAAKC,QAAL,CAAcT,eAAe,CAACQ,KAA9B,CARO;;AAAA;AASb,sBAAKF,QAAL,GAAgBI,WAAW,CAAC,YAAM;AACjC,wBAAKD,QAAL,CAAcT,eAAe,CAACQ,KAA9B;AACA,iBAF0B,EAExB,KAFwB,CAA3B;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA/GI;;AAAA;AAAA;AAAA;AAAA;;AAAA,UA+HnBD,UA/HmB,GA+HN,YAAM;AAClB,YAAKV,QAAL,CAAc;AAAEc,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,KAjIkB;;AAAA,UAmInBC,WAnImB,GAmIL,YAAM;AACnB,YAAKf,QAAL,CAAc;AAAEc,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,KArIkB;;AAAA,UAuInBE,YAvImB,GAuIJ,YAAM;AACpB,YAAKhB,QAAL,CAAc;AAAA,eAAO;AAAEgB,UAAAA,YAAY,EAAE;AAAhB,SAAP;AAAA,OAAd;AACA,KAzIkB;;AAAA,UA2InBC,aA3ImB,GA2IH,YAAM;AACrB,YAAKjB,QAAL,CAAc;AAAA,eAAO;AAAEgB,UAAAA,YAAY,EAAE;AAAhB,SAAP;AAAA,OAAd;AACA,KA7IkB;;AAAA,UA+InBE,UA/ImB,GA+IN,YAAM;AAClB,YAAKD,aAAL;AACA,KAjJkB;;AAAA,UAmJnBjC,MAnJmB,yEAmJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,MAAKS,KAAL,CAAWT,MAAX,EADb;;AAAA;AACFmC,cAAAA,MADE;;AAER,kBAAIA,MAAM,CAACC,MAAP,KAAkB,SAAtB,EAAiC;AAChCvB,gBAAAA,MAAM,CAACwB,QAAP,GAAkB,GAAlB;AACA;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnJU;;AAAA,UAuKnBC,cAvKmB,GAuKF,UAAAC,MAAM,EAAI;AAC1B,cAAQA,MAAR;AACC,aAAK,cAAL;AAAqB;AACpB,kBAAKvB,QAAL,CAAc;AAAEwB,cAAAA,YAAY,EAAE;AAAhB,aAAd;;AACA,kBAAKxB,QAAL,CAAc;AAAEyB,cAAAA,WAAW,EAAE;AAAf,aAAd;;AACA;AACA;;AACD,aAAK,aAAL;AAAoB;AACnB,kBAAKzB,QAAL,CAAc;AAAE0B,cAAAA,WAAW,EAAE;AAAf,aAAd;;AACA;AACA;;AACD;AAAS;AACR;AACA;AAZF;AAcA,KAtLkB;;AAAA,UAwLnBC,eAxLmB,GAwLD,UAAAJ,MAAM,EAAI;AAC3B,cAAQA,MAAR;AACC,aAAK,cAAL;AAAqB;AACpB,kBAAKvB,QAAL,CAAc;AAAEwB,cAAAA,YAAY,EAAE;AAAhB,aAAd;;AACA;AACA;;AACD,aAAK,aAAL;AAAoB;AACnB,kBAAKxB,QAAL,CAAc;AAAE0B,cAAAA,WAAW,EAAE;AAAf,aAAd;;AACA;AACA;;AACD;AAAS;AACR;AACA;AAXF;AAaA,KAtMkB;;AAAA,UAwMnBE,iBAxMmB,GAwMC,UAAAC,IAAI,EAAI;AAC3B,UAAQC,OAAR,GAAoB,MAAKrC,KAAzB,CAAQqC,OAAR;AACAA,MAAAA,OAAO,CAACD,IAAI,KAAK,MAAT,GAAkB,OAAlB,GAA4B,MAA7B,CAAP;AACA,KA3MkB;;AAElB,UAAKjC,KAAL,GAAa;AACZD,MAAAA,MAAM,EAAE,KADI;AAEZ6B,MAAAA,YAAY,EAAE,KAFF;AAGZE,MAAAA,WAAW,EAAE,KAHD;AAIZlF,MAAAA,QAAQ,EAAE,EAJE;AAKZiF,MAAAA,WAAW,EAAE,CALD;AAMZM,MAAAA,aAAa,EAAE,EANH;AAOZC,MAAAA,SAAS,EAAE,IAPC;AAQZlB,MAAAA,SAAS,EAAE,KARC;AASZE,MAAAA,YAAY,EAAE,KATF;AAUZb,MAAAA,eAAe,EAAE;AAVL,KAAb;AAFkB;AAclB;;AAfF;AAAA;AAAA,WAiBC,6BAAoB;AAAA;;AACnB,wBAAiD,KAAKV,KAAtD;AAAA,UAAkBwC,UAAlB,eAAQzF,QAAR;AAAA,UAA8B0F,cAA9B,eAA8BA,cAA9B,CADmB,CAEnB;;AAGA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAIC,aAAa,GAAG,EAApB;AAEAH,MAAAA,UAAU,CAACI,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAC7B,YAAIA,OAAO,CAACC,oBAAR,KAAiCL,cAArC,EAAqD;AACpDE,UAAAA,aAAa,GAAG;AACfzB,YAAAA,KAAK,EAAE2B,OAAO,CAACC,oBADA;AAEfC,YAAAA,KAAK,EAAEF,OAAO,CAACG;AAFA,WAAhB;AAIA;;AACDN,QAAAA,GAAG,CAACO,IAAJ,CAAS;AACR/B,UAAAA,KAAK,EAAE2B,OAAO,CAACC,oBADP;AAERC,UAAAA,KAAK,EAAEF,OAAO,CAACG;AAFP,SAAT;AAIA,OAXD;AAYA,WAAKzC,QAAL,CAAc;AACbkC,QAAAA,cAAc,EAAEA,cADH;AAEb1F,QAAAA,QAAQ,EAAE2F,GAFG;AAGbH,QAAAA,SAAS,EAAE,KAHE;AAIb7B,QAAAA,eAAe,EAAEiC;AAJJ,OAAd;AAOA,WAAK3B,QAAL,GAAgBI,WAAW,CAAC,YAAM;AACjC,QAAA,MAAI,CAACD,QAAL,CAAcsB,cAAd;AACA,OAF0B,EAExB,KAFwB,CAA3B;AAGA;AA/CF;AAAA;AAAA,WAiDC,gCAAuB;AACtB1B,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA;AAnDF;AAAA;AAAA,WAqDC,mCAA0BkC,SAA1B,EAAqC;AACpC,yBAA6C,KAAKlD,KAAlD;AAAA,UAAQyC,cAAR,gBAAQA,cAAR;AAAA,UAAwB3B,gBAAxB,gBAAwBA,gBAAxB;AACA,UAAMqC,OAAO,GAAG,EAAhB;AACA,UAAIR,aAAa,GAAG,EAApB;;AACA,UAAIO,SAAS,CAACnG,QAAV,CAAmB8D,MAAnB,GAA4B,CAAhC,EAAmC;AAClCqC,QAAAA,SAAS,CAACnG,QAAV,CAAmB6F,OAAnB,CAA2B,UAAAC,OAAO,EAAI;AACrCM,UAAAA,OAAO,CAACF,IAAR,CAAa;AACZ/B,YAAAA,KAAK,EAAE2B,OAAO,CAACC,oBADH;AAEZC,YAAAA,KAAK,EAAEF,OAAO,CAACG;AAFH,WAAb;;AAIA,cACCE,SAAS,CAACT,cAAV,IAA4B,IAA5B,IACAS,SAAS,CAACT,cAAV,KAA6BW,SAF9B,EAGE;AACD,gBAAIP,OAAO,CAACC,oBAAR,IAAgC,IAApC,EAA0C;AACzCH,cAAAA,aAAa,GAAG;AACfzB,gBAAAA,KAAK,EAAE2B,OAAO,CAACC,oBADA;AAEfC,gBAAAA,KAAK,EAAEF,OAAO,CAACG;AAFA,eAAhB;AAIA;AACD,WAVD,MAUO,IAAIH,OAAO,CAACC,oBAAR,KAAiCI,SAAS,CAACT,cAA/C,EAA+D;AACrEE,YAAAA,aAAa,GAAG;AACfzB,cAAAA,KAAK,EAAE2B,OAAO,CAACC,oBADA;AAEfC,cAAAA,KAAK,EAAEF,OAAO,CAACG;AAFA,aAAhB;AAIA;AACD,SArBD;AAsBA;;AAED,UACCE,SAAS,CAACT,cAAV,KAA6B,IAA7B,IACAS,SAAS,CAACT,cAAV,KAA6BW,SAF9B,EAGE;AACDzC,QAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ,EAAkE+B,aAAa,CAACzB,KAAhF;AACAJ,QAAAA,gBAAgB,CAAC6B,aAAa,CAACzB,KAAf,CAAhB;AACA;;AAED,WAAKX,QAAL,CAAc;AACbkC,QAAAA,cAAc,EAAEA,cADH;AAEb1F,QAAAA,QAAQ,EAAEoG,OAFG;AAGbZ,QAAAA,SAAS,EAAE,KAHE;AAIb7B,QAAAA,eAAe,EAAEiC;AAJJ,OAAd;;AAMA,UAAIO,SAAS,CAACT,cAAV,KAA6BA,cAAjC,EAAiD;AAChD,aAAKtB,QAAL,CAAc+B,SAAS,CAACT,cAAxB;AACA;AACD;AAnGF;AAAA;AAAA,WA8MC,oBAAWY,YAAX,EAAyB;AACxB;AACA,wBAAuD,KAAKlD,KAA5D;AAAA,UAAQmC,aAAR,eAAQA,aAAR;AAAA,UAAuBN,WAAvB,eAAuBA,WAAvB;AAAA,UAAoCS,cAApC,eAAoCA,cAApC;AACA,UAAMa,SAAS,GAAGhB,aAAlB;AACAgB,MAAAA,SAAS,CAACC,OAAV,CAAkBC,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAlB;AACA,WAAK9C,QAAL,CAAc;AAAE+B,QAAAA,aAAa,EAAEgB;AAAjB,OAAd;AACA,WAAK/C,QAAL,CAAc;AAAEyB,QAAAA,WAAW,EAAEA,WAAW,GAAG;AAA7B,OAAd;AACA,WAAKb,QAAL,CAAcsB,cAAd;AACA;AAtNF;AAAA;AAAA;AAAA,qFAwNC;AAAA;AAAA;AAAA;AAAA;AAAA;AACSiB,gBAAAA,WADT,GACyB,KAAK1D,KAD9B,CACS0D,WADT;AAAA;AAAA,uBAEOA,WAAW,EAFlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAxND;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EA6NC,kBAAejB,cAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAeK,KAAKzC,KAfV,EAEE2D,YAFF,gBAEEA,YAFF,EAGEC,gBAHF,gBAGEA,gBAHF,EAIEC,eAJF,gBAIEA,eAJF,EAKEC,gBALF,gBAKEA,gBALF,EAMEJ,WANF,gBAMEA,WANF,EAOEK,YAPF,gBAOEA,YAPF,EAQEC,WARF,gBAQEA,WARF,EASEC,aATF,gBASEA,aATF,EAUEC,mBAVF,gBAUEA,mBAVF,EAWEC,kBAXF,gBAWEA,kBAXF,EAYEC,qBAZF,gBAYEA,qBAZF,EAaEC,oBAbF,gBAaEA,oBAbF,EAcEC,gBAdF,gBAcEA,gBAdF;AAAA;AAAA,uBAiBOC,OAAO,CAACC,GAAR,CAAY,CACjBb,YAAY,CAAClB,cAAD,CADK,EAEjBmB,gBAAgB,CAACnB,cAAD,CAFC,EAGjBoB,eAAe,CAACpB,cAAD,CAHE,EAIjBqB,gBAAgB,CAACrB,cAAD,CAJC,EAKjBiB,WAAW,EALM,EAMjBK,YAAY,CAACtB,cAAD,CANK,EAOjB6B,gBAAgB,CAAC7B,cAAD,CAPC,EAQjBuB,WAAW,CAACvB,cAAD,CARM,EASjBwB,aAAa,CAACxB,cAAD,CATI,EAUjByB,mBAAmB,CAACzB,cAAD,CAVF,EAWjB0B,kBAAkB,CAAC1B,cAAD,CAXD,EAYjB2B,qBAAqB,CAAC3B,cAAD,CAZJ,EAajB4B,oBAAoB,CAAC5B,cAAD,CAbH,CAAZ,CAjBP;;AAAA;AAgCC,qBAAKnB,WAAL;;AAhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA7ND;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAgQC,kBAAS;AAAA;;AACR,yBAA0B,KAAKtB,KAA/B;AAAA,UAAQoC,IAAR,gBAAQA,IAAR;AAAA,UAAcqC,OAAd,gBAAcA,OAAd;AACA,6BAA2BrE,MAAM,CAACwB,QAAlC;AAAA,UAAQ8C,QAAR,oBAAQA,QAAR;AAAA,UAAkBC,IAAlB,oBAAkBA,IAAlB;AACA,UAAMC,iBAAiB,GACtBxE,MAAM,CAACwB,QAAP,CAAgBiD,QAAhB,KAA6B,QAA7B,GAAwC,KAAxC,GAAgD,IADjD;AAEA,UAAMC,YAAY,aAAMF,iBAAN,gBAA6BF,QAA7B,cAAyCC,IAAzC,MAAlB;AACA,UAAMlH,IAAI,GAAG2E,IAAI,KAAK,MAAtB;AACA,yBAUI,KAAKjC,KAVT;AAAA,UACCoC,SADD,gBACCA,SADD;AAAA,UAEC7B,eAFD,gBAECA,eAFD;AAAA,UAGWqE,aAHX,gBAGChI,QAHD;AAAA,UAICiF,WAJD,gBAICA,WAJD;AAAA,UAKCD,YALD,gBAKCA,YALD;AAAA,UAMCE,WAND,gBAMCA,WAND;AAAA,UAOCZ,SAPD,gBAOCA,SAPD;AAAA,UAQCE,YARD,gBAQCA,YARD;AAAA,UASCe,aATD,gBASCA,aATD;AAWA,UAAM0C,KAAK,GAAG,CACb;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWlC,QAAAA,KAAK,EAAE,WAAlB;AAA+BmC,QAAAA,KAAK,EAAE;AAAtC,OADa,EAEb;AACA;AAAED,QAAAA,EAAE,EAAE,UAAN;AAAkBlC,QAAAA,KAAK,EAAE;AAAzB,OAHa,EAIb;AAAEkC,QAAAA,EAAE,EAAE,SAAN;AAAiBlC,QAAAA,KAAK,EAAE;AAAxB,OAJa,EAKb;AAAEkC,QAAAA,EAAE,EAAE,eAAN;AAAuBlC,QAAAA,KAAK,EAAE;AAA9B,OALa,EAMb;AAAEkC,QAAAA,EAAE,EAAE,aAAN;AAAqBlC,QAAAA,KAAK,EAAE;AAA5B,OANa,EAOb;AAAEkC,QAAAA,EAAE,EAAE,WAAN;AAAmBlC,QAAAA,KAAK,EAAE;AAA1B,OAPa,CAAd;AAUA,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGC,oBAAC,SAAD;AACC,QAAA,GAAG,EAAE+B,YADN;AAEC,QAAA,SAAS,EAAE,KAAKK,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAFZ;AAGC,QAAA,SAAS,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,eAQC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEX,OAAO,CAAC1G,YAA3B;AAAyC,QAAA,MAAM,EAAC,IAAhD;AAAqD,QAAA,KAAK,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,GAAG,EAAEnD,IAAV;AAAgB,QAAA,SAAS,EAAE6J,OAAO,CAAC7G,IAAnC;AAAyC,QAAA,GAAG,EAAC,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD,eAIC,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,KAAKqC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,SAAS,EAAEwE,OAAO,CAAC5E,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJD,eAOC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKM,KAAL,CAAWD,MAA7B;AAAqC,QAAA,MAAM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,GAAD;AACC,QAAA,SAAS,EAAC,qBADX;AAEC,QAAA,MAAM,MAFP;AAGC,QAAA,YAAY,EAAE,KAAKM,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKEwE,KAAK,CAACK,GAAN,CAAU;AAAA,YAAGJ,EAAH,SAAGA,EAAH;AAAA,YAAOlC,KAAP,SAAOA,KAAP;AAAA,YAAiB/C,KAAjB;;AAAA,4BACV;AAAI,UAAA,GAAG,EAAEiF,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC,oBAAC,OAAD;AACC,UAAA,EAAE,EAAEA,EADL;AAEC,UAAA,SAAS,EAAER,OAAO,CAACxG,GAFpB;AAGC,UAAA,eAAe,EAAEwG,OAAO,CAACnG,SAH1B;AAIC,UAAA,OAAO,EAAE,MAAI,CAAC2B;AAJf,WAKKD,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOE+C,KAPF,CADD,CADU;AAAA,OAAV,CALF,eAkBC;AAAK,QAAA,SAAS,EAAE0B,OAAO,CAAChG,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,MAAD;AACC,QAAA,SAAS,EAAEgG,OAAO,CAACvF,OADpB;AAEC,QAAA,WAAW,EAAC,mBAFb;AAGC,QAAA,QAAQ,MAHT;AAIC,QAAA,IAAI,EAAC,iBAJN;AAKC,QAAA,SAAS,EAAEqD,SALZ;AAMC,QAAA,KAAK,EAAE7B,eANR;AAOC,QAAA,QAAQ,EAAE,KAAKD,YAPhB;AAQC,QAAA,OAAO,EAAE,KAAK6E,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CARV;AASC,QAAA,OAAO,EAAEL,aATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAlBD,eAmDC;AAAK,QAAA,SAAS,YAAKN,OAAO,CAAChG,WAAb,cAA4BgG,OAAO,CAAC9F,WAApC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,OAAlB;AAA0B,QAAA,SAAS,EAAE8F,OAAO,CAACpF,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,eAEC,oBAAC,MAAD;AACC,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAAC8C,iBAAL,CAAuBC,IAAvB,CAAN;AAAA,SADX;AAEC,QAAA,OAAO,EAAE3E,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,eAMC,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEgH,OAAO,CAACnF,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,CAnDD,eA2DC;AAAK,QAAA,SAAS,EAAE7F,UAAU,CAACgL,OAAO,CAAChG,WAAT,EAAsBgG,OAAO,CAAC9E,IAA9B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,WAAD;AACC,QAAA,IAAI,EAAC,WADN;AAEC,QAAA,SAAS,EAAE8E,OAAO,CAAC7E,QAFpB;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC2B,YAAL,EAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CA3DD,eAkEC;AAAK,QAAA,SAAS,EAAE9H,UAAU,CAACgL,OAAO,CAAChG,WAAT,EAAsBgG,OAAO,CAACc,OAA9B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,WAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,SAAS,EAAEd,OAAO,CAAClF,MAFpB;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,MAAL,EAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAlED,CADD,CAPD,CADD,eAqFC,oBAAC,MAAD;AACC,QAAA,MAAM,EAAC,OADR;AAEC,QAAA,IAAI,EAAEwC,YAFP;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACG,eAAL,CAAqB,cAArB,CAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKC;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,kBAAD;AAAoB,QAAA,aAAa,EAAEI,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CALD,CArFD,eA8FC,oBAAC,MAAD;AACC,QAAA,MAAM,EAAC,OADR;AAEC,QAAA,IAAI,EAAEL,WAFP;AAGC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,eAAL,CAAqB,aAArB,CAAN;AAAA,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKC;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAkB,QAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CALD,CA9FD,eAuGC,oBAAC,MAAD;AACC,QAAA,IAAI,EAAEX,YADP;AAEC,QAAA,OAAO,EAAE,KAAKC,aAFf;AAGC,QAAA,SAAS,EAAE,KAHZ;AAIC,QAAA,QAAQ,EAAC,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMC,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKA,aAA1B;AAAyC,QAAA,UAAU,EAAE,KAAKC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,CAvGD,eAgHC,oBAAC,MAAD;AACC,QAAA,IAAI,EAAEJ,SADP;AAEC,QAAA,OAAO,EAAE,KAAKC,WAFf;AAGC,QAAA,SAAS,EAAE,KAHZ;AAIC,QAAA,QAAQ,EAAC,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMC;AAAK,QAAA,SAAS,EAAEmD,OAAO,CAACtF,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,eAEC,oBAAC,MAAD;AACC,QAAA,IAAI,EAAC,WADN;AAEC,QAAA,KAAK,EAAC,SAFP;AAGC,QAAA,MAAM,EAAE,EAHT;AAIC,QAAA,KAAK,EAAE,EAJR;AAKC,QAAA,SAAS,EAAEsF,OAAO,CAACrF,MALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CAND,CAhHD,CADD,CARD,CADD;AA+IA;AA3aF;;AAAA;AAAA,EAAgC9F,SAAhC;AA8aAyG,UAAU,CAACyF,SAAX,GAAuB;AACtB/C,EAAAA,cAAc,EAAEpH,kBAAkB,CAACoK,UADb;AAEtB1I,EAAAA,QAAQ,EAAEzB,YAAY,CAACmK,UAFD;AAGtB9B,EAAAA,YAAY,EAAEpI,gBAAgB,CAACkK,UAHT;AAItB7B,EAAAA,gBAAgB,EAAEpI,oBAAoB,CAACiK,UAJjB;AAKtB5B,EAAAA,eAAe,EAAEpI,mBAAmB,CAACgK,UALf;AAMtB3E,EAAAA,gBAAgB,EAAElF,oBAAoB,CAAC6J,UANjB;AAOtB3B,EAAAA,gBAAgB,EAAEpI,oBAAoB,CAAC+J,UAPjB;AAQtB/B,EAAAA,WAAW,EAAE/H,eAAe,CAAC8J,UARP;AAStB1B,EAAAA,YAAY,EAAElI,gBAAgB,CAAC4J,UATT;AAUtBzB,EAAAA,WAAW,EAAElI,eAAe,CAAC2J,UAVP;AAWtBxB,EAAAA,aAAa,EAAElI,iBAAiB,CAAC0J,UAXX;AAYtBvB,EAAAA,mBAAmB,EAAElI,uBAAuB,CAACyJ,UAZvB;AAatBrB,EAAAA,qBAAqB,EAAEnI,yBAAyB,CAACwJ,UAb3B;AActBpB,EAAAA,oBAAoB,EAAEnI,wBAAwB,CAACuJ,UAdzB;AAetBpD,EAAAA,OAAO,EAAElG,WAAW,CAACsJ;AAfC,CAAvB;AAkBA,IAAQC,YAAR,GAAyBxK,cAAzB,CAAQwK,YAAR;AAEA,eAAenM,OAAO,CACrBG,UAAU,CAAC2D,MAAD,CADW,EAErB7D,OAAO,CACN,UAAA2G,KAAK;AAAA,SAAK;AACTsC,IAAAA,cAAc,EAAEtF,sBAAsB,CAACgD,KAAD,CAD7B;AAETpD,IAAAA,QAAQ,EAAEK,gBAAgB,CAAC+C,KAAD,CAFjB;AAGTiC,IAAAA,IAAI,EAAEsD,YAAY,CAACvF,KAAD;AAHT,GAAL;AAAA,CADC,EAMN;AACCwD,EAAAA,YAAY,EAAE9G,SADf;AAEC+G,EAAAA,gBAAgB,EAAExH,YAFnB;AAGCyH,EAAAA,eAAe,EAAExH,WAHlB;AAICyH,EAAAA,gBAAgB,EAAEhH,aAJnB;AAKCgE,EAAAA,gBAAgB,EAAEpE,aALnB;AAKkC;AACjCgH,EAAAA,WAAW,EAAE3G,QANd;AAOCgH,EAAAA,YAAY,EAAEtH,SAPf;AAQCuH,EAAAA,WAAW,EAAEhH,QARd;AASCiH,EAAAA,aAAa,EAAErH,UAThB;AAUC0H,EAAAA,gBAAgB,EAAE3H,aAVnB;AAWCuH,EAAAA,mBAAmB,EAAE1H,gBAXtB;AAYC2H,EAAAA,kBAAkB,EAAEjH,eAZrB;AAaCkH,EAAAA,qBAAqB,EAAE9H,kBAbxB;AAcC+H,EAAAA,oBAAoB,EAAE9H,iBAdvB;AAeCgD,EAAAA,MAAM,EAAEnE,cAAc,CAACmE;AAfxB,CANM,CAFc,CAAP,CA0BbQ,UA1Ba,CAAf","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse } from 'reactstrap';\nimport { HashRouter as Router, NavLink } from 'react-router-dom';\nimport Switch from '@material-ui/core/Switch';\nimport FontAwesome from 'react-fontawesome';\nimport Drawer from '@material-ui/core/Drawer';\nimport Websocket from 'react-websocket';\nimport Badge from '@material-ui/core/Badge';\nimport Dialog from '@material-ui/core/Dialog';\nimport Loader from 'react-loader-spinner';\nimport Select from '../../components/Styled/Select';\nimport NotificationsPanel from '../../components/Panels/NotificationsPanel';\nimport Logo from '../../static/images/Logo-VNPAYQR.png';\nimport AdminPanel from '../../components/Panels/AdminPanel';\nimport { chartOperations, chartSelectors } from '../../state/redux/charts';\nimport { tableOperations, tableSelectors } from '../../state/redux/tables';\nimport { themeSelectors } from '../../state/redux/theme';\nimport UsersPanal from '../../components/UsersPanal/UsersPanal';\nimport { authOperations } from '../../state/redux/auth';\n\n// import Enroll from '../Enroll';\n\nimport {\n\tcurrentChannelType,\n\tchannelsType,\n\tgetBlockListType,\n\tgetBlocksPerHourType,\n\tgetBlocksPerMinType,\n\tgetChaincodeListType,\n\tgetChannelsType,\n\tgetChangeChannelType,\n\tgetDashStatsType,\n\tgetPeerListType,\n\tgetPeerStatusType,\n\tgetTransactionByOrgType,\n\tgetTransactionPerHourType,\n\tgetTransactionPerMinType,\n\trefreshType\n} from '../../consts/types';\n\nconst {\n\tblockPerHour,\n\tblockPerMin,\n\ttransactionPerHour,\n\ttransactionPerMin,\n\ttransactionByOrg,\n\tdashStats,\n\tchangeChannel,\n\tblockActivity,\n\tpeerStatus\n} = chartOperations;\n\nconst {\n\tblockList,\n\tchaincodeList,\n\tchannels,\n\tpeerList,\n\ttransaction,\n\ttransactionList\n} = tableOperations;\n\nconst { currentChannelSelector } = chartSelectors;\nconst { channelsSelector } = tableSelectors;\n/* istanbul ignore next */\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\tconst darkNavbar = dark && {\n\t\tbackground: 'linear-gradient(to right, rgb(236, 233, 252), #4d4575)'\n\t};\n\treturn {\n\t\tlogo: {\n\t\t\twidth: 180,\n\t\t\theight: 50,\n\t\t\t'@media (max-width: 1415px) and (min-width: 990px)': {\n\t\t\t\twidth: 200,\n\t\t\t\theight: 40\n\t\t\t}\n\t\t},\n\t\tnavbarHeader: {\n\t\t\tbackgroundColor: '#e8e8e8',\n\t\t\t...darkNavbar\n\t\t},\n\t\ttab: {\n\t\t\tcolor: dark ? '#242036' : '#000000',\n\t\t\tfontSize: '1.05rem',\n\t\t\tfontWeight: 800,\n\t\t\theight: 50,\n\t\t\tmargin: 10,\n\t\t\t'&:hover': {\n\t\t\t\tcolor: dark ? '#242036' : '#000000'\n\t\t\t},\n\t\t\t'@media (max-width: 1415px) and (min-width: 990px)': {\n\t\t\t\tfontSize: '0.85rem'\n\t\t\t}\n\t\t},\n\t\tactiveTab: {\n\t\t\tcolor: '#ffffff',\n\t\t\tbackgroundColor: dark ? '#453e68' : '#58c5c2',\n\t\t\theight: 60,\n\t\t\tmarginTop: 20,\n\t\t\tpadding: 10,\n\t\t\t'&:hover': {\n\t\t\t\tcolor: '#ffffff'\n\t\t\t},\n\t\t\t'@media (max-width: 1415px) and (min-width: 990px)': {\n\t\t\t\tpadding: '8%'\n\t\t\t}\n\t\t},\n\t\tadminButton: {\n\t\t\tpaddingTop: 0,\n\t\t\tmarginTop: 0\n\t\t},\n\t\tthemeSwitch: {\n\t\t\theight: 50,\n\t\t\tlineHeight: '50px',\n\t\t\ttextAlign: 'center',\n\t\t\tmarginLeft: 15,\n\t\t\twidth: 100,\n\t\t\tpaddingTop: 0,\n\t\t\t'@media (max-width: 1415px) and (min-width: 990px)': {\n\t\t\t\tdisplay: 'flex'\n\t\t\t},\n\t\t\t'@media (max-width: 990px)': {\n\t\t\t\tmarginLeft: 0\n\t\t\t}\n\t\t},\n\t\tbell: {\n\t\t\tcolor: dark ? 'rgb(139, 143, 148)' : '#5f6164',\n\t\t\tfontSize: '18pt',\n\t\t\tmargin: 8,\n\t\t\tfloat: 'none',\n\t\t\t'&:hover': {\n\t\t\t\tcolor: dark ? '#c1d7f0' : '#24272a'\n\t\t\t}\n\t\t},\n\t\tchannel: {\n\t\t\twidth: 200,\n\t\t\tmargin: 8,\n\t\t\tfloat: 'none',\n\t\t\t'@media (max-width: 1415px) and (min-width: 990px)': {\n\t\t\t\twidth: '9em'\n\t\t\t}\n\t\t},\n\t\tchannelLoader: {\n\t\t\ttextAlign: 'center',\n\t\t\tpadding: 20\n\t\t},\n\t\tloader: {\n\t\t\tmargin: '0 auto',\n\t\t\twidth: 100\n\t\t},\n\t\tsunIcon: {\n\t\t\tcolor: dark ? 'rgb(247, 200, 92)' : 'rgb(245, 185, 47)',\n\t\t\t'@media (max-width: 1415px) and (min-width: 990px)': {\n\t\t\t\tmarginTop: 15\n\t\t\t}\n\t\t},\n\t\tmoonIcon: {\n\t\t\tcolor: dark ? '#9cd7f7' : 'rgb(104, 195, 245)',\n\t\t\t'@media (max-width: 1415px) and (min-width: 990px)': {\n\t\t\t\tmarginTop: 15\n\t\t\t}\n\t\t},\n\t\tlogout: {\n\t\t\tmarginRight: -3\n\t\t},\n\t\tlogoutIcon: {\n\t\t\tcolor: dark ? 'rgb(139, 143, 148)' : '#5f6164',\n\t\t\tfontSize: '18pt',\n\t\t\tfloat: 'none',\n\t\t\t'&:hover': {\n\t\t\t\tcolor: dark ? '#c1d7f0' : '#24272a'\n\t\t\t},\n\t\t\tmarginLeft: 5,\n\t\t\tmarginTop: 14,\n\t\t\tcursor: 'pointer'\n\t\t},\n\t\tuser: {\n\t\t\tmarginRight: -3\n\t\t},\n\t\tuserIcon: {\n\t\t\tcolor: dark ? 'rgb(139, 143, 148)' : '#5f6164',\n\t\t\tfontSize: '18pt',\n\t\t\tfloat: 'none',\n\t\t\t'&:hover': {\n\t\t\t\tcolor: dark ? '#c1d7f0' : '#24272a'\n\t\t\t},\n\t\t\tmarginLeft: 5,\n\t\t\tmarginTop: 14,\n\t\t\tcursor: 'pointer'\n\t\t},\n\t\ttoggleIcon: {\n\t\t\tcolor: dark ? '#242136' : '#58c5c2',\n\t\t\tfontSize: '1.75em',\n\t\t\t'&:focus': {\n\t\t\t\toutline: 'none'\n\t\t\t}\n\t\t}\n\t};\n};\n\nexport class HeaderView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t\tnotifyDrawer: false,\n\t\t\tadminDrawer: false,\n\t\t\tchannels: [],\n\t\t\tnotifyCount: 0,\n\t\t\tnotifications: [],\n\t\t\tisLoading: true,\n\t\t\tmodalOpen: false,\n\t\t\tregisterOpen: false,\n\t\t\tselectedChannel: {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { channels: channelArr, currentChannel } = this.props;\n\t\t// console.log(\"Binhnt: Layout.Header.HeaderView.componentDidMount: props =  \", this.props)\n\n\n\t\tconst arr = [];\n\t\tlet selectedValue = {};\n\n\t\tchannelArr.forEach(element => {\n\t\t\tif (element.channel_genesis_hash === currentChannel) {\n\t\t\t\tselectedValue = {\n\t\t\t\t\tvalue: element.channel_genesis_hash,\n\t\t\t\t\tlabel: element.channelname\n\t\t\t\t};\n\t\t\t}\n\t\t\tarr.push({\n\t\t\t\tvalue: element.channel_genesis_hash,\n\t\t\t\tlabel: element.channelname\n\t\t\t});\n\t\t});\n\t\tthis.setState({\n\t\t\tcurrentChannel: currentChannel,\n\t\t\tchannels: arr,\n\t\t\tisLoading: false,\n\t\t\tselectedChannel: selectedValue\n\t\t});\n\n\t\tthis.interVal = setInterval(() => {\n\t\t\tthis.syncData(currentChannel);\n\t\t}, 60000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interVal);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst { currentChannel, getChangeChannel } = this.props;\n\t\tconst options = [];\n\t\tlet selectedValue = {};\n\t\tif (nextProps.channels.length > 0) {\n\t\t\tnextProps.channels.forEach(element => {\n\t\t\t\toptions.push({\n\t\t\t\t\tvalue: element.channel_genesis_hash,\n\t\t\t\t\tlabel: element.channelname\n\t\t\t\t});\n\t\t\t\tif (\n\t\t\t\t\tnextProps.currentChannel == null ||\n\t\t\t\t\tnextProps.currentChannel === undefined\n\t\t\t\t) {\n\t\t\t\t\tif (element.channel_genesis_hash != null) {\n\t\t\t\t\t\tselectedValue = {\n\t\t\t\t\t\t\tvalue: element.channel_genesis_hash,\n\t\t\t\t\t\t\tlabel: element.channelname\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else if (element.channel_genesis_hash === nextProps.currentChannel) {\n\t\t\t\t\tselectedValue = {\n\t\t\t\t\t\tvalue: element.channel_genesis_hash,\n\t\t\t\t\t\tlabel: element.channelname\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tnextProps.currentChannel === null ||\n\t\t\tnextProps.currentChannel === undefined\n\t\t) {\n\t\t\tconsole.log(\"binhnt.HeaderView: call getChangeChannel: value = \", selectedValue.value)\n\t\t\tgetChangeChannel(selectedValue.value);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentChannel: currentChannel,\n\t\t\tchannels: options,\n\t\t\tisLoading: false,\n\t\t\tselectedChannel: selectedValue\n\t\t});\n\t\tif (nextProps.currentChannel !== currentChannel) {\n\t\t\tthis.syncData(nextProps.currentChannel);\n\t\t}\n\t}\n\n\ttoggle = () => {\n\t\tconst { isOpen } = this.state;\n\t\tif (window.matchMedia('(max-width:992px)').matches) {\n\t\t\tthis.setState({\n\t\t\t\tisOpen: !isOpen\n\t\t\t});\n\t\t}\n\t};\n\n\tcloseToggle = () => this.state.isOpen && this.toggle();\n\n\thandleChange = async selectedChannel => {\n\t\tconsole.log(\"binhnt.layout.header.HeaderView.handleChange: Select channel \")\n\t\tif (this.state.channels.length > 1) {\n\t\t\tconst { getChangeChannel } = this.props;\n\t\t\tclearInterval(this.interVal);\n\t\t\tawait this.handleOpen();\n\t\t\tthis.setState({ selectedChannel });\n\t\t\tgetChangeChannel(selectedChannel.value);\n\t\t\tawait this.syncData(selectedChannel.value);\n\t\t\tthis.interVal = setInterval(() => {\n\t\t\t\tthis.syncData(selectedChannel.value);\n\t\t\t}, 60000);\n\t\t}\n\t\t//  this.handleClose();\n\t};\n\n\thandleOpen = () => {\n\t\tthis.setState({ modalOpen: true });\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({ modalOpen: false });\n\t};\n\n\tregisterOpen = () => {\n\t\tthis.setState(() => ({ registerOpen: true }));\n\t};\n\n\tregisterClose = () => {\n\t\tthis.setState(() => ({ registerOpen: false }));\n\t};\n\n\tonRegister = () => {\n\t\tthis.registerClose();\n\t};\n\n\tlogout = async () => {\n\t\tconst result = await this.props.logout();\n\t\tif (result.status === 'Success') {\n\t\t\twindow.location = '/';\n\t\t}\n\t};\n\n\t/**enrollOpen = () => {\n\tthis.setState(() => ({ enrollOpen: true }));\n  };\n\n  enrollClose = () => {\n\tthis.setState(() => ({ enrollOpen: false }));\n  };\n\n  onEnroll = user => {\n\talert(JSON.stringify(user, null, 2));\n\tthis.enrollClose();\n  }; */\n\n\thandleDrawOpen = drawer => {\n\t\tswitch (drawer) {\n\t\t\tcase 'notifyDrawer': {\n\t\t\t\tthis.setState({ notifyDrawer: true });\n\t\t\t\tthis.setState({ notifyCount: 0 });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'adminDrawer': {\n\t\t\t\tthis.setState({ adminDrawer: true });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\thandleDrawClose = drawer => {\n\t\tswitch (drawer) {\n\t\t\tcase 'notifyDrawer': {\n\t\t\t\tthis.setState({ notifyDrawer: false });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'adminDrawer': {\n\t\t\t\tthis.setState({ adminDrawer: false });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\thandleThemeChange = mode => {\n\t\tconst { refresh } = this.props;\n\t\trefresh(mode === 'dark' ? 'light' : 'dark');\n\t};\n\n\thandleData(notification) {\n\t\t// this.props.getNotification(notification);\n\t\tconst { notifications, notifyCount, currentChannel } = this.state;\n\t\tconst notifyArr = notifications;\n\t\tnotifyArr.unshift(JSON.parse(notification));\n\t\tthis.setState({ notifications: notifyArr });\n\t\tthis.setState({ notifyCount: notifyCount + 1 });\n\t\tthis.syncData(currentChannel);\n\t}\n\n\tasync reloadChannels() {\n\t\tconst { getChannels } = this.props;\n\t\tawait getChannels();\n\t}\n\n\tasync syncData(currentChannel) {\n\t\tconst {\n\t\t\tgetBlockList,\n\t\t\tgetBlocksPerHour,\n\t\t\tgetBlocksPerMin,\n\t\t\tgetChaincodeList,\n\t\t\tgetChannels,\n\t\t\tgetDashStats,\n\t\t\tgetPeerList,\n\t\t\tgetPeerStatus,\n\t\t\tgetTransactionByOrg,\n\t\t\tgetTransactionList,\n\t\t\tgetTransactionPerHour,\n\t\t\tgetTransactionPerMin,\n\t\t\tgetBlockActivity\n\t\t} = this.props;\n\n\t\tawait Promise.all([\n\t\t\tgetBlockList(currentChannel),\n\t\t\tgetBlocksPerHour(currentChannel),\n\t\t\tgetBlocksPerMin(currentChannel),\n\t\t\tgetChaincodeList(currentChannel),\n\t\t\tgetChannels(),\n\t\t\tgetDashStats(currentChannel),\n\t\t\tgetBlockActivity(currentChannel),\n\t\t\tgetPeerList(currentChannel),\n\t\t\tgetPeerStatus(currentChannel),\n\t\t\tgetTransactionByOrg(currentChannel),\n\t\t\tgetTransactionList(currentChannel),\n\t\t\tgetTransactionPerHour(currentChannel),\n\t\t\tgetTransactionPerMin(currentChannel)\n\t\t]);\n\t\tthis.handleClose();\n\t}\n\n\trender() {\n\t\tconst { mode, classes } = this.props;\n\t\tconst { hostname, port } = window.location;\n\t\tconst webSocketProtocol =\n\t\t\twindow.location.protocol === 'https:' ? 'wss' : 'ws';\n\t\tconst webSocketUrl = `${webSocketProtocol}://${hostname}:${port}/`;\n\t\tconst dark = mode === 'dark';\n\t\tconst {\n\t\t\tisLoading,\n\t\t\tselectedChannel,\n\t\t\tchannels: stateChannels,\n\t\t\tnotifyCount,\n\t\t\tnotifyDrawer,\n\t\t\tadminDrawer,\n\t\t\tmodalOpen,\n\t\t\tregisterOpen,\n\t\t\tnotifications\n\t\t} = this.state;\n\t\tconst links = [\n\t\t\t{ to: '/', label: 'DASHBOARD', exact: true },\n\t\t\t// { to: '/accounts', label: 'ACCOUNTS' },\n\t\t\t{ to: '/network', label: 'NETWORK' },\n\t\t\t{ to: '/blocks', label: 'BLOCKS' },\n\t\t\t{ to: '/transactions', label: 'TRANSACTIONS' },\n\t\t\t{ to: '/chaincodes', label: 'CHAINCODES' },\n\t\t\t{ to: '/channels', label: 'CHANNELS' }\n\t\t];\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/* production */}\n\t\t\t\t{/* development */}\n\t\t\t\t<Websocket\n\t\t\t\t\turl={webSocketUrl}\n\t\t\t\t\tonMessage={this.handleData.bind(this)}\n\t\t\t\t\treconnect\n\t\t\t\t/>\n\t\t\t\t<Router>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar className={classes.navbarHeader} expand=\"lg\" fixed=\"top\">\n\t\t\t\t\t\t\t<NavbarBrand href=\"/\">\n\t\t\t\t\t\t\t\t<img src={Logo} className={classes.logo} alt=\"Hyperledger Logo\" />\n\t\t\t\t\t\t\t</NavbarBrand>\n\t\t\t\t\t\t\t<NavbarToggler onClick={this.toggle}>\n\t\t\t\t\t\t\t\t<FontAwesome name=\"bars\" className={classes.toggleIcon} />\n\t\t\t\t\t\t\t</NavbarToggler>\n\t\t\t\t\t\t\t<Collapse isOpen={this.state.isOpen} navbar>\n\t\t\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t\t\t\tclassName=\"ml-auto navbar-left\"\n\t\t\t\t\t\t\t\t\tnavbar\n\t\t\t\t\t\t\t\t\tonMouseLeave={this.closeToggle}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{links.map(({ to, label, ...props }) => (\n\t\t\t\t\t\t\t\t\t\t<li key={to}>\n\t\t\t\t\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\t\t\t\t\tto={to}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.tab}\n\t\t\t\t\t\t\t\t\t\t\t\tactiveClassName={classes.activeTab}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.toggle}\n\t\t\t\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t<div className={classes.adminButton}>\n\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.channel}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Channel...\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tname=\"form-field-name\"\n\t\t\t\t\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t\t\t\t\t\tvalue={selectedChannel}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonFocus={this.reloadChannels.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\toptions={stateChannels}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t// <div className={classes.adminButton}>\n\t\t\t\t\t\t\t\t\t\t// \t<FontAwesome\n\t\t\t\t\t\t\t\t\t\t// \t\tname=\"bell\"\n\t\t\t\t\t\t\t\t\t\t// \t\tdata-command=\"bell\"\n\t\t\t\t\t\t\t\t\t\t// \t\tclassName={classes.bell}\n\t\t\t\t\t\t\t\t\t\t// \t\tonClick={() => this.handleDrawOpen(\"notifyDrawer\")}\n\t\t\t\t\t\t\t\t\t\t// \t/>\n\t\t\t\t\t\t\t\t\t\t// \t<Badge badgeContent={notifyCount} color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t// </div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{/*\n              //Use when Admin functionality is required\n              <div className={classes.adminButton}>\n                <FontAwesome\n                  name='cog'\n                  className='cog'\n                  onClick={() => this.handleDrawOpen('adminDrawer')}\n                />\n              </div> */}\n\t\t\t\t\t\t\t\t\t<div className={`${classes.adminButton} ${classes.themeSwitch}`}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"sun-o\" className={classes.sunIcon} />\n\t\t\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => this.handleThemeChange(mode)}\n\t\t\t\t\t\t\t\t\t\t\tchecked={dark}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FontAwesome name=\"moon-o\" className={classes.moonIcon} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classNames(classes.adminButton, classes.user)}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesome\n\t\t\t\t\t\t\t\t\t\t\tname=\"user-plus\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.userIcon}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.registerOpen()}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classNames(classes.adminButton, classes.logoutk)}>\n\t\t\t\t\t\t\t\t\t\t<FontAwesome\n\t\t\t\t\t\t\t\t\t\t\tname=\"sign-out\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.logout}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.logout()}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t</Navbar>\n\t\t\t\t\t\t<Drawer\n\t\t\t\t\t\t\tanchor=\"right\"\n\t\t\t\t\t\t\topen={notifyDrawer}\n\t\t\t\t\t\t\tonClose={() => this.handleDrawClose('notifyDrawer')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div tabIndex={0} role=\"button\">\n\t\t\t\t\t\t\t\t<NotificationsPanel notifications={notifications} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Drawer>\n\t\t\t\t\t\t<Drawer\n\t\t\t\t\t\t\tanchor=\"right\"\n\t\t\t\t\t\t\topen={adminDrawer}\n\t\t\t\t\t\t\tonClose={() => this.handleDrawClose('adminDrawer')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div tabIndex={0} role=\"button\">\n\t\t\t\t\t\t\t\t<AdminPanel />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Drawer>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\topen={registerOpen}\n\t\t\t\t\t\t\tonClose={this.registerClose}\n\t\t\t\t\t\t\tfullWidth={false}\n\t\t\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<UsersPanal onClose={this.registerClose} onRegister={this.onRegister} />\n\t\t\t\t\t\t\t{/* <Register onClose={this.registerClose} onRegister={this.onRegister} /> */}\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\topen={modalOpen}\n\t\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\t\tfullWidth={false}\n\t\t\t\t\t\t\tmaxWidth=\"md\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={classes.channelLoader}>\n\t\t\t\t\t\t\t\t<h4>Loading Channel Details</h4>\n\t\t\t\t\t\t\t\t<Loader\n\t\t\t\t\t\t\t\t\ttype=\"ThreeDots\"\n\t\t\t\t\t\t\t\t\tcolor=\"#005069\"\n\t\t\t\t\t\t\t\t\theight={70}\n\t\t\t\t\t\t\t\t\twidth={70}\n\t\t\t\t\t\t\t\t\tclassName={classes.loader}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nHeaderView.propTypes = {\n\tcurrentChannel: currentChannelType.isRequired,\n\tchannels: channelsType.isRequired,\n\tgetBlockList: getBlockListType.isRequired,\n\tgetBlocksPerHour: getBlocksPerHourType.isRequired,\n\tgetBlocksPerMin: getBlocksPerMinType.isRequired,\n\tgetChangeChannel: getChangeChannelType.isRequired,\n\tgetChaincodeList: getChaincodeListType.isRequired,\n\tgetChannels: getChannelsType.isRequired,\n\tgetDashStats: getDashStatsType.isRequired,\n\tgetPeerList: getPeerListType.isRequired,\n\tgetPeerStatus: getPeerStatusType.isRequired,\n\tgetTransactionByOrg: getTransactionByOrgType.isRequired,\n\tgetTransactionPerHour: getTransactionPerHourType.isRequired,\n\tgetTransactionPerMin: getTransactionPerMinType.isRequired,\n\trefresh: refreshType.isRequired\n};\n\nconst { modeSelector } = themeSelectors;\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tcurrentChannel: currentChannelSelector(state),\n\t\t\tchannels: channelsSelector(state),\n\t\t\tmode: modeSelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetBlockList: blockList,\n\t\t\tgetBlocksPerHour: blockPerHour,\n\t\t\tgetBlocksPerMin: blockPerMin,\n\t\t\tgetChaincodeList: chaincodeList,\n\t\t\tgetChangeChannel: changeChannel, // not in syncdata\n\t\t\tgetChannels: channels,\n\t\t\tgetDashStats: dashStats,\n\t\t\tgetPeerList: peerList,\n\t\t\tgetPeerStatus: peerStatus,\n\t\t\tgetBlockActivity: blockActivity,\n\t\t\tgetTransactionByOrg: transactionByOrg,\n\t\t\tgetTransactionList: transactionList,\n\t\t\tgetTransactionPerHour: transactionPerHour,\n\t\t\tgetTransactionPerMin: transactionPerMin,\n\t\t\tlogout: authOperations.logout\n\t\t}\n\t)\n)(HeaderView);\n"]},"metadata":{},"sourceType":"module"}