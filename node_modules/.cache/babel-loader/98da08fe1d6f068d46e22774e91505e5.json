{"ast":null,"code":"/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\nimport types from './types';\n\nvar getBlockList = function getBlockList(blockList) {\n  return {\n    type: types.BLOCK_LIST,\n    payload: blockList\n  };\n};\n\nvar getBlockListSearch = function getBlockListSearch(blockList) {\n  return {\n    type: types.BLOCK_LIST_SEARCH,\n    payload: blockList\n  };\n};\n\nvar getChaincodeList = function getChaincodeList(chaincodeList) {\n  return {\n    type: types.CHAINCODE_LIST,\n    payload: chaincodeList\n  };\n};\n\nvar getChannels = function getChannels(channels) {\n  return {\n    type: types.CHANNELS,\n    payload: channels\n  };\n};\n\nvar getPeerList = function getPeerList(peerList) {\n  return {\n    type: types.PEER_LIST,\n    payload: peerList\n  };\n};\n\nvar getTransaction = function getTransaction(transaction) {\n  return {\n    type: types.TRANSACTION,\n    payload: transaction\n  };\n};\n\nvar getTransactionList = function getTransactionList(transactionList) {\n  return {\n    type: types.TRANSACTION_LIST,\n    payload: transactionList\n  };\n};\n\nvar getTransactionListSearch = function getTransactionListSearch(transactionList) {\n  return {\n    type: types.TRANSACTION_LIST_SEARCH,\n    payload: transactionList\n  };\n};\n\nexport default {\n  getBlockList: getBlockList,\n  getChaincodeList: getChaincodeList,\n  getChannels: getChannels,\n  getPeerList: getPeerList,\n  getTransaction: getTransaction,\n  getTransactionList: getTransactionList,\n  getBlockListSearch: getBlockListSearch,\n  getTransactionListSearch: getTransactionListSearch\n};","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/state/redux/tables/actions.js"],"names":["types","getBlockList","blockList","type","BLOCK_LIST","payload","getBlockListSearch","BLOCK_LIST_SEARCH","getChaincodeList","chaincodeList","CHAINCODE_LIST","getChannels","channels","CHANNELS","getPeerList","peerList","PEER_LIST","getTransaction","transaction","TRANSACTION","getTransactionList","transactionList","TRANSACTION_LIST","getTransactionListSearch","TRANSACTION_LIST_SEARCH"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS;AAAA,SAAK;AAClCC,IAAAA,IAAI,EAAEH,KAAK,CAACI,UADsB;AAElCC,IAAAA,OAAO,EAAEH;AAFyB,GAAL;AAAA,CAA9B;;AAIA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAJ,SAAS;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAEH,KAAK,CAACO,iBAD4B;AAExCF,IAAAA,OAAO,EAAEH;AAF+B,GAAL;AAAA,CAApC;;AAKA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,aAAa;AAAA,SAAK;AAC1CN,IAAAA,IAAI,EAAEH,KAAK,CAACU,cAD8B;AAE1CL,IAAAA,OAAO,EAAEI;AAFiC,GAAL;AAAA,CAAtC;;AAKA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAK;AAChCT,IAAAA,IAAI,EAAEH,KAAK,CAACa,QADoB;AAEhCR,IAAAA,OAAO,EAAEO;AAFuB,GAAL;AAAA,CAA5B;;AAKA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAK;AAChCZ,IAAAA,IAAI,EAAEH,KAAK,CAACgB,SADoB;AAEhCX,IAAAA,OAAO,EAAEU;AAFuB,GAAL;AAAA,CAA5B;;AAKA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,WAAW;AAAA,SAAK;AACtCf,IAAAA,IAAI,EAAEH,KAAK,CAACmB,WAD0B;AAEtCd,IAAAA,OAAO,EAAEa;AAF6B,GAAL;AAAA,CAAlC;;AAKA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,eAAe;AAAA,SAAK;AAC9ClB,IAAAA,IAAI,EAAEH,KAAK,CAACsB,gBADkC;AAE9CjB,IAAAA,OAAO,EAAEgB;AAFqC,GAAL;AAAA,CAA1C;;AAIA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAF,eAAe;AAAA,SAAK;AACpDlB,IAAAA,IAAI,EAAEH,KAAK,CAACwB,uBADwC;AAEpDnB,IAAAA,OAAO,EAAEgB;AAF2C,GAAL;AAAA,CAAhD;;AAKA,eAAe;AACdpB,EAAAA,YAAY,EAAZA,YADc;AAEdO,EAAAA,gBAAgB,EAAhBA,gBAFc;AAGdG,EAAAA,WAAW,EAAXA,WAHc;AAIdG,EAAAA,WAAW,EAAXA,WAJc;AAKdG,EAAAA,cAAc,EAAdA,cALc;AAMdG,EAAAA,kBAAkB,EAAlBA,kBANc;AAOdd,EAAAA,kBAAkB,EAAlBA,kBAPc;AAQdiB,EAAAA,wBAAwB,EAAxBA;AARc,CAAf","sourcesContent":["/**\r\n *    SPDX-License-Identifier: Apache-2.0\r\n */\r\n\r\nimport types from './types';\r\n\r\nconst getBlockList = blockList => ({\r\n\ttype: types.BLOCK_LIST,\r\n\tpayload: blockList\r\n});\r\nconst getBlockListSearch = blockList => ({\r\n\ttype: types.BLOCK_LIST_SEARCH,\r\n\tpayload: blockList\r\n});\r\n\r\nconst getChaincodeList = chaincodeList => ({\r\n\ttype: types.CHAINCODE_LIST,\r\n\tpayload: chaincodeList\r\n});\r\n\r\nconst getChannels = channels => ({\r\n\ttype: types.CHANNELS,\r\n\tpayload: channels\r\n});\r\n\r\nconst getPeerList = peerList => ({\r\n\ttype: types.PEER_LIST,\r\n\tpayload: peerList\r\n});\r\n\r\nconst getTransaction = transaction => ({\r\n\ttype: types.TRANSACTION,\r\n\tpayload: transaction\r\n});\r\n\r\nconst getTransactionList = transactionList => ({\r\n\ttype: types.TRANSACTION_LIST,\r\n\tpayload: transactionList\r\n});\r\nconst getTransactionListSearch = transactionList => ({\r\n\ttype: types.TRANSACTION_LIST_SEARCH,\r\n\tpayload: transactionList\r\n});\r\n\r\nexport default {\r\n\tgetBlockList,\r\n\tgetChaincodeList,\r\n\tgetChannels,\r\n\tgetPeerList,\r\n\tgetTransaction,\r\n\tgetTransactionList,\r\n\tgetBlockListSearch,\r\n\tgetTransactionListSearch\r\n};\r\n"]},"metadata":{},"sourceType":"module"}