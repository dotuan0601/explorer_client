{"ast":null,"code":"import _objectSpread from \"/home/teko/work/new_explorer/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/home/teko/work/new_explorer/client/src/layout/Main/Main.js\";\n\n/**\n *    SPDX-License-Identifier: Apache-2.0\n */\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlocksView from '../../components/View/BlocksView';\nimport NetworkView from '../../components/View/NetworkView';\nimport TransactionsView from '../../components/View/TransactionsView';\nimport ChaincodeView from '../../components/View/ChaincodeView';\nimport DashboardView from '../../components/View/DashboardView';\nimport ChannelsView from '../../components/View/ChannelsView';\nimport { chartSelectors } from '../../state/redux/charts';\nimport { tableOperations, tableSelectors } from '../../state/redux/tables';\nimport { blockListType, chaincodeListType, channelsType, currentChannelType, dashStatsType, getTransactionType, peerListType, peerStatusType, transactionType, transactionByOrgType, transactionListType } from '../../consts/types';\nimport PageNotFound from '../../components/View/PageNotFound';\nimport Private from '../../pages/Route';\nimport AccountView from '../../components/View/AccountView';\nvar currentChannelSelector = chartSelectors.currentChannelSelector,\n    blockActivitySelector = chartSelectors.blockActivitySelector,\n    channelListSelector = chartSelectors.channelListSelector,\n    dashStatsSelector = chartSelectors.dashStatsSelector,\n    peerStatusSelector = chartSelectors.peerStatusSelector,\n    transactionByOrgSelector = chartSelectors.transactionByOrgSelector;\nvar blockListSelector = tableSelectors.blockListSelector,\n    chaincodeListSelector = tableSelectors.chaincodeListSelector,\n    channelsSelector = tableSelectors.channelsSelector,\n    peerListSelector = tableSelectors.peerListSelector,\n    transactionSelector = tableSelectors.transactionSelector,\n    transactionListSelector = tableSelectors.transactionListSelector,\n    blockListSearchSelector = tableSelectors.blockListSearchSelector,\n    transactionListSearchSelector = tableSelectors.transactionListSearchSelector;\n\nvar styles = function styles(theme) {\n  var type = theme.palette.type;\n  var dark = type === 'dark';\n  return {\n    main: {\n      color: dark ? '#ffffff' : undefined\n    }\n  };\n};\n\nexport var Main = function Main(props) {\n  var classes = props.classes,\n      blockList = props.blockList,\n      blockActivity = props.blockActivity,\n      chaincodeList = props.chaincodeList,\n      channels = props.channels,\n      currentChannel = props.currentChannel,\n      dashStats = props.dashStats,\n      getTransaction = props.getTransaction,\n      peerList = props.peerList,\n      peerStatus = props.peerStatus,\n      transaction = props.transaction,\n      transactionByOrg = props.transactionByOrg,\n      transactionList = props.transactionList,\n      blockListSearch = props.blockListSearch,\n      transactionListSearch = props.transactionListSearch,\n      getBlockListSearch = props.getBlockListSearch,\n      getTransactionListSearch = props.getTransactionListSearch,\n      getTransactionInfo = props.getTransactionInfo,\n      getTransactionList = props.getTransactionList;\n  var blocksViewProps = {\n    blockList: blockList,\n    blockListSearch: blockListSearch,\n    getBlockListSearch: getBlockListSearch,\n    transactionByOrg: transactionByOrg,\n    currentChannel: currentChannel,\n    getTransaction: getTransaction,\n    transaction: transaction\n  };\n  var chaincodeViewProps = {\n    chaincodeList: chaincodeList\n  };\n  var channelsViewProps = {\n    channels: channels\n  };\n  var dashboardViewProps = {\n    blockList: blockList,\n    dashStats: dashStats,\n    peerStatus: peerStatus,\n    transactionByOrg: transactionByOrg,\n    blockActivity: blockActivity\n  };\n  var accountViewProps = {};\n  var networkViewProps = {\n    peerList: peerList\n  };\n  var transactionsViewProps = {\n    currentChannel: currentChannel,\n    transaction: transaction,\n    transactionList: transactionList,\n    getTransactionInfo: getTransactionInfo,\n    getTransactionList: getTransactionList,\n    getTransaction: getTransaction,\n    transactionByOrg: transactionByOrg,\n    transactionListSearch: transactionListSearch,\n    getTransactionListSearch: getTransactionListSearch\n  };\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Private, {\n    exact: true,\n    path: \"/\",\n    render: function render(routeprops) {\n      return /*#__PURE__*/React.createElement(DashboardView, Object.assign({}, _objectSpread(_objectSpread({}, dashboardViewProps), routeprops), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Private, {\n    exact: true,\n    path: \"/blocks\",\n    render: function render(routeprops) {\n      return /*#__PURE__*/React.createElement(BlocksView, Object.assign({}, _objectSpread(_objectSpread({}, blocksViewProps), routeprops), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Private, {\n    exact: true,\n    path: \"/chaincodes\",\n    render: function render(routeprops) {\n      return /*#__PURE__*/React.createElement(ChaincodeView, Object.assign({}, _objectSpread(_objectSpread({}, chaincodeViewProps), routeprops), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Private, {\n    exact: true,\n    path: \"/channels\",\n    render: function render(routeprops) {\n      return /*#__PURE__*/React.createElement(ChannelsView, Object.assign({}, _objectSpread(_objectSpread({}, channelsViewProps), routeprops), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Private, {\n    exact: true,\n    path: \"/network\",\n    render: function render(routeprops) {\n      return /*#__PURE__*/React.createElement(NetworkView, Object.assign({}, _objectSpread(_objectSpread({}, networkViewProps), routeprops), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Private, {\n    exact: true,\n    path: \"/transactions\",\n    render: function render(routeprops) {\n      return /*#__PURE__*/React.createElement(TransactionsView, Object.assign({}, _objectSpread(_objectSpread({}, transactionsViewProps), routeprops), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    render: function render(routeprops) {\n      return /*#__PURE__*/React.createElement(PageNotFound, Object.assign({}, routeprops, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 41\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 6\n    }\n  }))));\n};\nMain.propTypes = {\n  blockList: blockListType.isRequired,\n  chaincodeList: chaincodeListType.isRequired,\n  channels: channelsType.isRequired,\n  currentChannel: currentChannelType.isRequired,\n  dashStats: dashStatsType.isRequired,\n  getTransaction: getTransactionType.isRequired,\n  peerList: peerListType.isRequired,\n  peerStatus: peerStatusType.isRequired,\n  // transaction: transactionType.isRequired,\n  transactionByOrg: transactionByOrgType.isRequired,\n  transactionList: transactionListType.isRequired\n};\nexport default compose(withStyles(styles), connect(function (state) {\n  return {\n    blockList: blockListSelector(state),\n    chaincodeList: chaincodeListSelector(state),\n    channelList: channelListSelector(state),\n    channels: channelsSelector(state),\n    currentChannel: currentChannelSelector(state),\n    dashStats: dashStatsSelector(state),\n    peerList: peerListSelector(state),\n    peerStatus: peerStatusSelector(state),\n    transaction: transactionSelector(state),\n    transactionByOrg: transactionByOrgSelector(state),\n    transactionList: transactionListSelector(state),\n    blockListSearch: blockListSearchSelector(state),\n    transactionListSearch: transactionListSearchSelector(state),\n    blockActivity: blockActivitySelector(state)\n  };\n}, {\n  getTransaction: tableOperations.transaction,\n  getBlockListSearch: tableOperations.blockListSearch,\n  getTransactionListSearch: tableOperations.transactionListSearch,\n  getTransactionInfo: tableOperations.transaction,\n  getTransactionList: tableOperations.transactionList\n}))(Main);","map":{"version":3,"sources":["/home/teko/work/new_explorer/client/src/layout/Main/Main.js"],"names":["React","compose","withStyles","connect","HashRouter","Router","Route","Switch","BlocksView","NetworkView","TransactionsView","ChaincodeView","DashboardView","ChannelsView","chartSelectors","tableOperations","tableSelectors","blockListType","chaincodeListType","channelsType","currentChannelType","dashStatsType","getTransactionType","peerListType","peerStatusType","transactionType","transactionByOrgType","transactionListType","PageNotFound","Private","AccountView","currentChannelSelector","blockActivitySelector","channelListSelector","dashStatsSelector","peerStatusSelector","transactionByOrgSelector","blockListSelector","chaincodeListSelector","channelsSelector","peerListSelector","transactionSelector","transactionListSelector","blockListSearchSelector","transactionListSearchSelector","styles","theme","type","palette","dark","main","color","undefined","Main","props","classes","blockList","blockActivity","chaincodeList","channels","currentChannel","dashStats","getTransaction","peerList","peerStatus","transaction","transactionByOrg","transactionList","blockListSearch","transactionListSearch","getBlockListSearch","getTransactionListSearch","getTransactionInfo","getTransactionList","blocksViewProps","chaincodeViewProps","channelsViewProps","dashboardViewProps","accountViewProps","networkViewProps","transactionsViewProps","routeprops","propTypes","isRequired","state","channelList"],"mappings":"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","sourcesContent":["/**\n *    SPDX-License-Identifier: Apache-2.0\n */\n\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlocksView from '../../components/View/BlocksView';\nimport NetworkView from '../../components/View/NetworkView';\nimport TransactionsView from '../../components/View/TransactionsView';\nimport ChaincodeView from '../../components/View/ChaincodeView';\nimport DashboardView from '../../components/View/DashboardView';\nimport ChannelsView from '../../components/View/ChannelsView';\nimport { chartSelectors } from '../../state/redux/charts';\nimport { tableOperations, tableSelectors } from '../../state/redux/tables';\nimport {\n\tblockListType,\n\tchaincodeListType,\n\tchannelsType,\n\tcurrentChannelType,\n\tdashStatsType,\n\tgetTransactionType,\n\tpeerListType,\n\tpeerStatusType,\n\ttransactionType,\n\ttransactionByOrgType,\n\ttransactionListType\n} from '../../consts/types';\nimport PageNotFound from '../../components/View/PageNotFound';\n\nimport Private from '../../pages/Route';\nimport AccountView from '../../components/View/AccountView';\n\nconst {\n\tcurrentChannelSelector,\n\tblockActivitySelector,\n\tchannelListSelector,\n\tdashStatsSelector,\n\tpeerStatusSelector,\n\ttransactionByOrgSelector\n} = chartSelectors;\n\nconst {\n\tblockListSelector,\n\tchaincodeListSelector,\n\tchannelsSelector,\n\tpeerListSelector,\n\ttransactionSelector,\n\ttransactionListSelector,\n\tblockListSearchSelector,\n\ttransactionListSearchSelector\n} = tableSelectors;\n\nconst styles = theme => {\n\tconst { type } = theme.palette;\n\tconst dark = type === 'dark';\n\treturn {\n\t\tmain: {\n\t\t\tcolor: dark ? '#ffffff' : undefined\n\t\t}\n\t};\n};\n\nexport const Main = props => {\n\tconst {\n\t\tclasses,\n\t\tblockList,\n\t\tblockActivity,\n\t\tchaincodeList,\n\t\tchannels,\n\t\tcurrentChannel,\n\t\tdashStats,\n\t\tgetTransaction,\n\t\tpeerList,\n\t\tpeerStatus,\n\t\ttransaction,\n\t\ttransactionByOrg,\n\t\ttransactionList,\n\t\tblockListSearch,\n\t\ttransactionListSearch,\n\t\tgetBlockListSearch,\n\t\tgetTransactionListSearch,\n\t\tgetTransactionInfo,\n\t\tgetTransactionList,\n\t} = props;\n\n\tconst blocksViewProps = {\n\t\tblockList,\n\t\tblockListSearch,\n\t\tgetBlockListSearch,\n\t\ttransactionByOrg,\n\t\tcurrentChannel,\n\t\tgetTransaction,\n\t\ttransaction\n\t};\n\tconst chaincodeViewProps = {\n\t\tchaincodeList\n\t};\n\n\tconst channelsViewProps = {\n\t\tchannels\n\t};\n\n\tconst dashboardViewProps = {\n\t\tblockList,\n\t\tdashStats,\n\t\tpeerStatus,\n\t\ttransactionByOrg,\n\t\tblockActivity\n\t};\n\tconst accountViewProps = {};\n\tconst networkViewProps = {\n\t\tpeerList\n\t};\n\n\tconst transactionsViewProps = {\n\t\tcurrentChannel,\n\t\ttransaction,\n\t\ttransactionList,\n\t\tgetTransactionInfo,\n\t\tgetTransactionList,\n\t\tgetTransaction,\n\t\ttransactionByOrg,\n\t\ttransactionListSearch,\n\t\tgetTransactionListSearch\n\t};\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className={classes.main}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<DashboardView {...{ ...dashboardViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/accounts\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<AccountView {...{ ...accountViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/> */}\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/blocks\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<BlocksView {...{ ...blocksViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/chaincodes\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChaincodeView {...{ ...chaincodeViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/channels\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<ChannelsView {...{ ...channelsViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/network\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<NetworkView {...{ ...networkViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Private\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/transactions\"\n\t\t\t\t\t\trender={routeprops => (\n\t\t\t\t\t\t\t<TransactionsView {...{ ...transactionsViewProps, ...routeprops }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact render={routeprops => <PageNotFound {...routeprops} />} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nMain.propTypes = {\n\tblockList: blockListType.isRequired,\n\tchaincodeList: chaincodeListType.isRequired,\n\tchannels: channelsType.isRequired,\n\tcurrentChannel: currentChannelType.isRequired,\n\tdashStats: dashStatsType.isRequired,\n\tgetTransaction: getTransactionType.isRequired,\n\tpeerList: peerListType.isRequired,\n\tpeerStatus: peerStatusType.isRequired,\n\t// transaction: transactionType.isRequired,\n\ttransactionByOrg: transactionByOrgType.isRequired,\n\ttransactionList: transactionListType.isRequired\n};\n\nexport default compose(\n\twithStyles(styles),\n\tconnect(\n\t\tstate => ({\n\t\t\tblockList: blockListSelector(state),\n\t\t\tchaincodeList: chaincodeListSelector(state),\n\t\t\tchannelList: channelListSelector(state),\n\t\t\tchannels: channelsSelector(state),\n\t\t\tcurrentChannel: currentChannelSelector(state),\n\t\t\tdashStats: dashStatsSelector(state),\n\t\t\tpeerList: peerListSelector(state),\n\t\t\tpeerStatus: peerStatusSelector(state),\n\t\t\ttransaction: transactionSelector(state),\n\t\t\ttransactionByOrg: transactionByOrgSelector(state),\n\t\t\ttransactionList: transactionListSelector(state),\n\t\t\tblockListSearch: blockListSearchSelector(state),\n\t\t\ttransactionListSearch: transactionListSearchSelector(state),\n\t\t\tblockActivity: blockActivitySelector(state)\n\t\t}),\n\t\t{\n\t\t\tgetTransaction: tableOperations.transaction,\n\t\t\tgetBlockListSearch: tableOperations.blockListSearch,\n\t\t\tgetTransactionListSearch: tableOperations.transactionListSearch,\n\t\t\tgetTransactionInfo: tableOperations.transaction,\n\t\t\tgetTransactionList: tableOperations.transactionList,\n\t\t}\n\t)\n)(Main);\n"]},"metadata":{},"sourceType":"module"}